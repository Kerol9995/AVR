
MG12232.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000eae  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000e3a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000009  00800100  00800100  00000eae  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000eae  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000f0c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000098  00000000  00000000  00000f4c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000b2f  00000000  00000000  00000fe4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007ef  00000000  00000000  00001b13  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000548  00000000  00000000  00002302  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000160  00000000  00000000  0000284c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000442  00000000  00000000  000029ac  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000001f6  00000000  00000000  00002dee  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000068  00000000  00000000  00002fe4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__ctors_end>
   4:	0c 94 62 01 	jmp	0x2c4	; 0x2c4 <__vector_1>
   8:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
   c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  10:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  14:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  18:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  1c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  20:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  24:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  28:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  2c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  30:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  34:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  38:	0c 94 04 01 	jmp	0x208	; 0x208 <__vector_14>
  3c:	0c 94 36 01 	jmp	0x26c	; 0x26c <__vector_15>
  40:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  44:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  48:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  4c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  50:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  54:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__vector_21>
  58:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  5c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  60:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  64:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>

00000068 <__trampolines_end>:
  68:	6e 61       	ori	r22, 0x1E	; 30
  6a:	6e 00       	.word	0x006e	; ????

0000006c <__c.2332>:
  6c:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
  7c:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
  8c:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
  9c:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
  ac:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
  bc:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
  cc:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
  dc:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
  ec:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
  fc:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
 10c:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
 11c:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
 12c:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
 13c:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
 14c:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
 15c:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000016a <__ctors_end>:
 16a:	11 24       	eor	r1, r1
 16c:	1f be       	out	0x3f, r1	; 63
 16e:	cf ef       	ldi	r28, 0xFF	; 255
 170:	d8 e0       	ldi	r29, 0x08	; 8
 172:	de bf       	out	0x3e, r29	; 62
 174:	cd bf       	out	0x3d, r28	; 61

00000176 <__do_copy_data>:
 176:	11 e0       	ldi	r17, 0x01	; 1
 178:	a0 e0       	ldi	r26, 0x00	; 0
 17a:	b1 e0       	ldi	r27, 0x01	; 1
 17c:	ea e3       	ldi	r30, 0x3A	; 58
 17e:	fe e0       	ldi	r31, 0x0E	; 14
 180:	02 c0       	rjmp	.+4      	; 0x186 <__do_copy_data+0x10>
 182:	05 90       	lpm	r0, Z+
 184:	0d 92       	st	X+, r0
 186:	a0 30       	cpi	r26, 0x00	; 0
 188:	b1 07       	cpc	r27, r17
 18a:	d9 f7       	brne	.-10     	; 0x182 <__do_copy_data+0xc>

0000018c <__do_clear_bss>:
 18c:	21 e0       	ldi	r18, 0x01	; 1
 18e:	a0 e0       	ldi	r26, 0x00	; 0
 190:	b1 e0       	ldi	r27, 0x01	; 1
 192:	01 c0       	rjmp	.+2      	; 0x196 <.do_clear_bss_start>

00000194 <.do_clear_bss_loop>:
 194:	1d 92       	st	X+, r1

00000196 <.do_clear_bss_start>:
 196:	a9 30       	cpi	r26, 0x09	; 9
 198:	b2 07       	cpc	r27, r18
 19a:	e1 f7       	brne	.-8      	; 0x194 <.do_clear_bss_loop>
 19c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <main>
 1a0:	0c 94 1b 07 	jmp	0xe36	; 0xe36 <_exit>

000001a4 <__bad_interrupt>:
 1a4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001a8 <__vector_21>:
extern uint16_t adc_value;
//----------------------------------------
char high_adc=0,low_adc=0;
//----------------------------------------
ISR(ADC_vect)
{
 1a8:	1f 92       	push	r1
 1aa:	0f 92       	push	r0
 1ac:	0f b6       	in	r0, 0x3f	; 63
 1ae:	0f 92       	push	r0
 1b0:	11 24       	eor	r1, r1
 1b2:	2f 93       	push	r18
 1b4:	8f 93       	push	r24
 1b6:	9f 93       	push	r25
	low_adc = ADCL;
 1b8:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 1bc:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_end>
	high_adc = ADCH;//¬ерхн€€ часть регистра ADC должна быть считана последней, иначе не продолжитс€ преобразование
 1c0:	20 91 79 00 	lds	r18, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 1c4:	20 93 01 01 	sts	0x0101, r18	; 0x800101 <high_adc>
	adc_value = ((uint16_t)high_adc<<8)|low_adc;
 1c8:	90 e0       	ldi	r25, 0x00	; 0
 1ca:	92 2b       	or	r25, r18
 1cc:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <adc_value+0x1>
 1d0:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <adc_value>
}
 1d4:	9f 91       	pop	r25
 1d6:	8f 91       	pop	r24
 1d8:	2f 91       	pop	r18
 1da:	0f 90       	pop	r0
 1dc:	0f be       	out	0x3f, r0	; 63
 1de:	0f 90       	pop	r0
 1e0:	1f 90       	pop	r1
 1e2:	18 95       	reti

000001e4 <main>:
// 	b++;
// }


int main(void)
{
 1e4:	cf 93       	push	r28
 1e6:	df 93       	push	r29
 1e8:	1f 92       	push	r1
 1ea:	cd b7       	in	r28, 0x3d	; 61
 1ec:	de b7       	in	r29, 0x3e	; 62
// 	USART_ini(MYUBRR);
// 	timer0_init();
// 	mg12232_init();
// 	adc_init();

	uint8_t co2_d = 0;
 1ee:	19 82       	std	Y+1, r1	; 0x01
	usartsoft_init();
 1f0:	0e 94 af 01 	call	0x35e	; 0x35e <usartsoft_init>
// 			usartsoft_transmit(co2_d);
// 		}
// 		uint8_t CO2_read[9]= {65, 66, 66, 66, 66, 66, 66, 66, 67};
// 		for (a=0;a<9;a++)usartsoft_transmit(CO2_data[a]+65);
// 		
		if (usartsoft_recieve(&co2_d)>=0)
 1f4:	ce 01       	movw	r24, r28
 1f6:	01 96       	adiw	r24, 0x01	; 1
 1f8:	0e 94 9a 01 	call	0x334	; 0x334 <usartsoft_recieve>
 1fc:	99 23       	and	r25, r25
 1fe:	d4 f3       	brlt	.-12     	; 0x1f4 <main+0x10>
		{
			usartsoft_transmit(co2_d);
 200:	89 81       	ldd	r24, Y+1	; 0x01
 202:	0e 94 8a 01 	call	0x314	; 0x314 <usartsoft_transmit>
 206:	f6 cf       	rjmp	.-20     	; 0x1f4 <main+0x10>

00000208 <__vector_14>:
*	в txbyte данные дл€ передачи вместе со стартовым битом. ѕосле этого они немедленно начнут передаватьс€.
*	‘ормированием посылки занимаетс€ функци€ void uart_send(uint8_t tb).
*/

ISR(TIMER0_COMPA_vect)
{
 208:	1f 92       	push	r1
 20a:	0f 92       	push	r0
 20c:	0f b6       	in	r0, 0x3f	; 63
 20e:	0f 92       	push	r0
 210:	11 24       	eor	r1, r1
 212:	2f 93       	push	r18
 214:	3f 93       	push	r19
 216:	8f 93       	push	r24
 218:	9f 93       	push	r25
	TXPORT = (TXPORT & ~(1 << TXD)) | ((txbyte & 0x01) << TXD); // ¬ыставл€ем в бит TXD младший бит txbyte
 21a:	95 b1       	in	r25, 0x05	; 5
 21c:	20 91 07 01 	lds	r18, 0x0107	; 0x800107 <txbyte>
 220:	30 91 08 01 	lds	r19, 0x0108	; 0x800108 <txbyte+0x1>
 224:	82 2f       	mov	r24, r18
 226:	81 70       	andi	r24, 0x01	; 1
 228:	82 95       	swap	r24
 22a:	80 7f       	andi	r24, 0xF0	; 240
 22c:	9f 7e       	andi	r25, 0xEF	; 239
 22e:	89 2b       	or	r24, r25
 230:	85 b9       	out	0x05, r24	; 5
	txbyte = (txbyte >> 0x01) + 0x8000;							// ƒвигаем txbyte вправо на 1 и пишем 1 в старший разр€д (0x8000)
 232:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <txbyte>
 236:	90 91 08 01 	lds	r25, 0x0108	; 0x800108 <txbyte+0x1>
 23a:	96 95       	lsr	r25
 23c:	87 95       	ror	r24
 23e:	90 58       	subi	r25, 0x80	; 128
 240:	90 93 08 01 	sts	0x0108, r25	; 0x800108 <txbyte+0x1>
 244:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <txbyte>
	if(txbitcount > 0)											// ≈сли идет передача (счетик бит больше нул€),
 248:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <txbitcount>
 24c:	88 23       	and	r24, r24
 24e:	29 f0       	breq	.+10     	; 0x25a <__vector_14+0x52>
	{
		txbitcount--;											// то уменьшаем его на единицу.
 250:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <txbitcount>
 254:	81 50       	subi	r24, 0x01	; 1
 256:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <txbitcount>
	}
}
 25a:	9f 91       	pop	r25
 25c:	8f 91       	pop	r24
 25e:	3f 91       	pop	r19
 260:	2f 91       	pop	r18
 262:	0f 90       	pop	r0
 264:	0f be       	out	0x3f, r0	; 63
 266:	0f 90       	pop	r0
 268:	1f 90       	pop	r1
 26a:	18 95       	reti

0000026c <__vector_15>:
*	переменной приема rxbyte, затем мы уменьшаем на единицу счетчик прин€тых бит и, если он стал нулем, заканчиваем
*	прием. »наче сдвигаем вправо переменную rxbyte, чтобы подготовить ее к приему следующего бита.
*/

ISR(TIMER0_COMPB_vect)
{
 26c:	1f 92       	push	r1
 26e:	0f 92       	push	r0
 270:	0f b6       	in	r0, 0x3f	; 63
 272:	0f 92       	push	r0
 274:	11 24       	eor	r1, r1
 276:	8f 93       	push	r24
 278:	ef 93       	push	r30
 27a:	ff 93       	push	r31
	if(RXPORT & (1 << RXD))			// ѕровер€ем в каком состо€нии вход RXD
 27c:	1d 9b       	sbis	0x03, 5	; 3
 27e:	05 c0       	rjmp	.+10     	; 0x28a <__vector_15+0x1e>
	rxbyte |= 0x80;				// ≈сли в 1, то пишем 1 в старший разр€д rxbyte
 280:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <rxbyte>
 284:	80 68       	ori	r24, 0x80	; 128
 286:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <rxbyte>
	
	if(--rxbitcount == 0)			// ”меньшаем на 1 счетчик бит и провер€ем не стал ли он нулем
 28a:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <rxbitcount>
 28e:	81 50       	subi	r24, 0x01	; 1
 290:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <rxbitcount>
 294:	81 11       	cpse	r24, r1
 296:	09 c0       	rjmp	.+18     	; 0x2aa <__vector_15+0x3e>
	{
		TIMSK0 &= ~(1 << OCIE0B);	// ≈сли да, запрещаем прерывание по сравнению OCR0B
 298:	ee e6       	ldi	r30, 0x6E	; 110
 29a:	f0 e0       	ldi	r31, 0x00	; 0
 29c:	80 81       	ld	r24, Z
 29e:	8b 7f       	andi	r24, 0xFB	; 251
 2a0:	80 83       	st	Z, r24
		TIFR0 |= (1 << OCF0B);		// ќчищаем флаг прерывани€ (важно!)
 2a2:	aa 9a       	sbi	0x15, 2	; 21
		EIFR |= (1 << INTF0);		// ќчищаем флаг прерывани€ по INT0
 2a4:	e0 9a       	sbi	0x1c, 0	; 28
		EIMSK |= (1 << INT0);		// –азрешаем прерывание INT0
 2a6:	e8 9a       	sbi	0x1d, 0	; 29
 2a8:	05 c0       	rjmp	.+10     	; 0x2b4 <__vector_15+0x48>
	}
	else
	{
		rxbyte >>= 0x01;			// »наче сдвигаем вправо на 1 rxbyte
 2aa:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <rxbyte>
 2ae:	86 95       	lsr	r24
 2b0:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <rxbyte>
	}
}
 2b4:	ff 91       	pop	r31
 2b6:	ef 91       	pop	r30
 2b8:	8f 91       	pop	r24
 2ba:	0f 90       	pop	r0
 2bc:	0f be       	out	0x3f, r0	; 63
 2be:	0f 90       	pop	r0
 2c0:	1f 90       	pop	r1
 2c2:	18 95       	reti

000002c4 <__vector_1>:
*	бита (по времени). ѕосле чего прерывание ISR(TIM0_COMPB_vect) разрешаетс€, а прерывание INT0
*	запрещаетс€.
*/

ISR(INT0_vect)
{
 2c4:	1f 92       	push	r1
 2c6:	0f 92       	push	r0
 2c8:	0f b6       	in	r0, 0x3f	; 63
 2ca:	0f 92       	push	r0
 2cc:	11 24       	eor	r1, r1
 2ce:	8f 93       	push	r24
 2d0:	ef 93       	push	r30
 2d2:	ff 93       	push	r31
	rxbitcount = 0x09;						// 8 бит данных и 1 стартовый бит
 2d4:	89 e0       	ldi	r24, 0x09	; 9
 2d6:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <rxbitcount>
	rxbyte = 0x00;							// ќбнул€ем содержимое rxbyte
 2da:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <rxbyte>
	if(TCNT0 < (BAUD_DIV / 2))				// ≈сли таймер не досчитал до середины текущего периода
 2de:	86 b5       	in	r24, 0x26	; 38
 2e0:	87 36       	cpi	r24, 0x67	; 103
 2e2:	20 f4       	brcc	.+8      	; 0x2ec <__vector_1+0x28>
	{
		OCR0B = TCNT0 + (BAUD_DIV / 2);	// “о прерывание произойдет в текущем периоде спуст€ пол периода
 2e4:	86 b5       	in	r24, 0x26	; 38
 2e6:	89 59       	subi	r24, 0x99	; 153
 2e8:	88 bd       	out	0x28, r24	; 40
 2ea:	03 c0       	rjmp	.+6      	; 0x2f2 <__vector_1+0x2e>
	}
	else
	{
		OCR0B = TCNT0 - (BAUD_DIV / 2);	// »наче прерывание произойдет в уже следующем периоде таймера
 2ec:	86 b5       	in	r24, 0x26	; 38
 2ee:	87 56       	subi	r24, 0x67	; 103
 2f0:	88 bd       	out	0x28, r24	; 40
	}
	EIMSK &= ~(1 << INT0);					// «апрещаем прерывание по INT0
 2f2:	e8 98       	cbi	0x1d, 0	; 29
	TIFR0 |= (1 << OCF0A) | (1 << OCF0B);	// ќчищаем флаг прерывани€ INT0
 2f4:	85 b3       	in	r24, 0x15	; 21
 2f6:	86 60       	ori	r24, 0x06	; 6
 2f8:	85 bb       	out	0x15, r24	; 21
	TIMSK0 |= (1 << OCIE0B);				// –азрешаем прерывание по OCR0B
 2fa:	ee e6       	ldi	r30, 0x6E	; 110
 2fc:	f0 e0       	ldi	r31, 0x00	; 0
 2fe:	80 81       	ld	r24, Z
 300:	84 60       	ori	r24, 0x04	; 4
 302:	80 83       	st	Z, r24
}
 304:	ff 91       	pop	r31
 306:	ef 91       	pop	r30
 308:	8f 91       	pop	r24
 30a:	0f 90       	pop	r0
 30c:	0f be       	out	0x3f, r0	; 63
 30e:	0f 90       	pop	r0
 310:	1f 90       	pop	r1
 312:	18 95       	reti

00000314 <usartsoft_transmit>:
*	влево, создава€ таким образом стартовый бит в младшем разр€де. «адает счетчик бит = 10.
*/

void usartsoft_transmit(uint8_t tb)
{
	while(txbitcount);				// ∆дем пока закончитс€ передача предыдущего байта
 314:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <txbitcount>
 318:	91 11       	cpse	r25, r1
 31a:	fc cf       	rjmp	.-8      	; 0x314 <usartsoft_transmit>
	txbyte = (tb + 0xFF00) << 0x01; // ѕишем в младшие разр€ды txbyte данные дл€ передачи и сдвигаем влево на 1
 31c:	90 e0       	ldi	r25, 0x00	; 0
 31e:	9a 95       	dec	r25
 320:	88 0f       	add	r24, r24
 322:	99 1f       	adc	r25, r25
 324:	90 93 08 01 	sts	0x0108, r25	; 0x800108 <txbyte+0x1>
 328:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <txbyte>
	txbitcount = 0x0A;				// «адаем счетчик байт равным 10
 32c:	8a e0       	ldi	r24, 0x0A	; 10
 32e:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <txbitcount>
 332:	08 95       	ret

00000334 <usartsoft_recieve>:
*	≈сли в момент вызова функции идет прием, функци€ будет ждать его завершени€. ≈сли функцию вызвать дважды,
*	то первый раз она возвратит прин€тый байт, второй раз (-1).
*/

int16_t usartsoft_recieve(uint8_t* rb)
{
 334:	fc 01       	movw	r30, r24
	if(rxbitcount < 0x09)	// ≈сли счетчик бит на прием меньше 9
 336:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <rxbitcount>
 33a:	89 30       	cpi	r24, 0x09	; 9
 33c:	68 f4       	brcc	.+26     	; 0x358 <usartsoft_recieve+0x24>
	{
		while(rxbitcount);	// ∆дем пока завершитс€ текущий прием
 33e:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <rxbitcount>
 342:	91 11       	cpse	r25, r1
 344:	fc cf       	rjmp	.-8      	; 0x33e <usartsoft_recieve+0xa>
		*rb = rxbyte;		// ѕишем по адресу указател€ прин€тый байт
 346:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <rxbyte>
 34a:	80 83       	st	Z, r24
		rxbitcount = 0x09;	// ¬осстанавливаем значение счетчика бит
 34c:	89 e0       	ldi	r24, 0x09	; 9
 34e:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <rxbitcount>
		return (*rb);		// ¬озвращаемс€
 352:	80 81       	ld	r24, Z
 354:	90 e0       	ldi	r25, 0x00	; 0
 356:	08 95       	ret
	}
	else
	{
		return (-1);		// »наче возвращаем -1 (принимать нечего)
 358:	8f ef       	ldi	r24, 0xFF	; 255
 35a:	9f ef       	ldi	r25, 0xFF	; 255
	}
}
 35c:	08 95       	ret

0000035e <usartsoft_init>:
*	»нициализирует глобальные переменные и регистры микроконтроллера.
*/

void usartsoft_init()
{
	txbyte = 0xFFFF;		// «начение буфера на передачу - все единицы
 35e:	8f ef       	ldi	r24, 0xFF	; 255
 360:	9f ef       	ldi	r25, 0xFF	; 255
 362:	90 93 08 01 	sts	0x0108, r25	; 0x800108 <txbyte+0x1>
 366:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <txbyte>
	rxbyte = 0x00;			// «начение буфера на прием - все нули
 36a:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <rxbyte>
	txbitcount = 0x00;		// «начение счетчика преедаваемых бит - ноль (ничего пока не передаем)
 36e:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <txbitcount>
	rxbitcount = 0x09;		// «начение счетчика бит на прием - 9 (ожидаем возможного приема)
 372:	89 e0       	ldi	r24, 0x09	; 9
 374:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <rxbitcount>
	
	TXDDR |= (1 << TXD);		// «адаем направление порта на передачу как выход
 378:	24 9a       	sbi	0x04, 4	; 4
	RXDDR &= ~(1 << RXD);		// «адаем направление порта на прием как вход
 37a:	25 98       	cbi	0x04, 5	; 4
	TXPORT |= (1 << TXD);		// ѕишем единицу в выход TXD
 37c:	2c 9a       	sbi	0x05, 4	; 5
	RXPORT |= (1 << RXD);		// ѕодт€гиваем к единице вход RXD
 37e:	1d 9a       	sbi	0x03, 5	; 3
	OCR0A = BAUD_DIV;			// «адаем значение регистра OCR0A в соответствии с бодрейтом
 380:	8f ec       	ldi	r24, 0xCF	; 207
 382:	87 bd       	out	0x27, r24	; 39
	TIMSK0 |= (1 << OCIE0A);	// –азрешаем прерывание TIM0_COMPA
 384:	ee e6       	ldi	r30, 0x6E	; 110
 386:	f0 e0       	ldi	r31, 0x00	; 0
 388:	80 81       	ld	r24, Z
 38a:	82 60       	ori	r24, 0x02	; 2
 38c:	80 83       	st	Z, r24
	TCCR0A |= (1 << WGM01);		// –ежим таймера CTC (очистка TCNT0 по достижению OCR0A)
 38e:	84 b5       	in	r24, 0x24	; 36
 390:	82 60       	ori	r24, 0x02	; 2
 392:	84 bd       	out	0x24, r24	; 36
	TCCR0B |= T_DIV;			// «адаем скорость счета таймера в соответствии с делителем
 394:	85 b5       	in	r24, 0x25	; 37
 396:	82 60       	ori	r24, 0x02	; 2
 398:	85 bd       	out	0x25, r24	; 37
	EICRA |= (1 << ISC01);		// «адаем прерывание INT0 по заднему фронту импульса
 39a:	e9 e6       	ldi	r30, 0x69	; 105
 39c:	f0 e0       	ldi	r31, 0x00	; 0
 39e:	80 81       	ld	r24, Z
 3a0:	82 60       	ori	r24, 0x02	; 2
 3a2:	80 83       	st	Z, r24
	PCICR |= (1 << PCIE0);		// ¬ыбираем –егистр управлени€ прерыванием смены вывода; PCINT[7:0]
 3a4:	e8 e6       	ldi	r30, 0x68	; 104
 3a6:	f0 e0       	ldi	r31, 0x00	; 0
 3a8:	80 81       	ld	r24, Z
 3aa:	81 60       	ori	r24, 0x01	; 1
 3ac:	80 83       	st	Z, r24
	PCMSK0 |= (1 << PCINT5);	// ¬ыбираем вывод PCINT5; PCINT[7:0]
 3ae:	eb e6       	ldi	r30, 0x6B	; 107
 3b0:	f0 e0       	ldi	r31, 0x00	; 0
 3b2:	80 81       	ld	r24, Z
 3b4:	80 62       	ori	r24, 0x20	; 32
 3b6:	80 83       	st	Z, r24
	EIMSK |= (1 << INT0);		// –азрешаем прерывание INT0
 3b8:	e8 9a       	sbi	0x1d, 0	; 29
	sei();						// –азрешаем прерывани€ глобально
 3ba:	78 94       	sei
 3bc:	08 95       	ret

000003be <vfprintf>:
 3be:	a0 e1       	ldi	r26, 0x10	; 16
 3c0:	b0 e0       	ldi	r27, 0x00	; 0
 3c2:	e5 ee       	ldi	r30, 0xE5	; 229
 3c4:	f1 e0       	ldi	r31, 0x01	; 1
 3c6:	0c 94 5c 05 	jmp	0xab8	; 0xab8 <__prologue_saves__>
 3ca:	7c 01       	movw	r14, r24
 3cc:	1b 01       	movw	r2, r22
 3ce:	6a 01       	movw	r12, r20
 3d0:	fc 01       	movw	r30, r24
 3d2:	17 82       	std	Z+7, r1	; 0x07
 3d4:	16 82       	std	Z+6, r1	; 0x06
 3d6:	83 81       	ldd	r24, Z+3	; 0x03
 3d8:	81 ff       	sbrs	r24, 1
 3da:	44 c3       	rjmp	.+1672   	; 0xa64 <__stack+0x165>
 3dc:	9e 01       	movw	r18, r28
 3de:	2f 5f       	subi	r18, 0xFF	; 255
 3e0:	3f 4f       	sbci	r19, 0xFF	; 255
 3e2:	39 01       	movw	r6, r18
 3e4:	f7 01       	movw	r30, r14
 3e6:	93 81       	ldd	r25, Z+3	; 0x03
 3e8:	f1 01       	movw	r30, r2
 3ea:	93 fd       	sbrc	r25, 3
 3ec:	85 91       	lpm	r24, Z+
 3ee:	93 ff       	sbrs	r25, 3
 3f0:	81 91       	ld	r24, Z+
 3f2:	1f 01       	movw	r2, r30
 3f4:	88 23       	and	r24, r24
 3f6:	09 f4       	brne	.+2      	; 0x3fa <vfprintf+0x3c>
 3f8:	31 c3       	rjmp	.+1634   	; 0xa5c <__stack+0x15d>
 3fa:	85 32       	cpi	r24, 0x25	; 37
 3fc:	39 f4       	brne	.+14     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 3fe:	93 fd       	sbrc	r25, 3
 400:	85 91       	lpm	r24, Z+
 402:	93 ff       	sbrs	r25, 3
 404:	81 91       	ld	r24, Z+
 406:	1f 01       	movw	r2, r30
 408:	85 32       	cpi	r24, 0x25	; 37
 40a:	39 f4       	brne	.+14     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 40c:	b7 01       	movw	r22, r14
 40e:	90 e0       	ldi	r25, 0x00	; 0
 410:	0e 94 81 06 	call	0xd02	; 0xd02 <fputc>
 414:	56 01       	movw	r10, r12
 416:	65 01       	movw	r12, r10
 418:	e5 cf       	rjmp	.-54     	; 0x3e4 <vfprintf+0x26>
 41a:	10 e0       	ldi	r17, 0x00	; 0
 41c:	51 2c       	mov	r5, r1
 41e:	91 2c       	mov	r9, r1
 420:	ff e1       	ldi	r31, 0x1F	; 31
 422:	f9 15       	cp	r31, r9
 424:	d8 f0       	brcs	.+54     	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
 426:	8b 32       	cpi	r24, 0x2B	; 43
 428:	79 f0       	breq	.+30     	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
 42a:	38 f4       	brcc	.+14     	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 42c:	80 32       	cpi	r24, 0x20	; 32
 42e:	79 f0       	breq	.+30     	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
 430:	83 32       	cpi	r24, 0x23	; 35
 432:	a1 f4       	brne	.+40     	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
 434:	f9 2d       	mov	r31, r9
 436:	f0 61       	ori	r31, 0x10	; 16
 438:	2e c0       	rjmp	.+92     	; 0x496 <__LOCK_REGION_LENGTH__+0x96>
 43a:	8d 32       	cpi	r24, 0x2D	; 45
 43c:	61 f0       	breq	.+24     	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
 43e:	80 33       	cpi	r24, 0x30	; 48
 440:	69 f4       	brne	.+26     	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
 442:	29 2d       	mov	r18, r9
 444:	21 60       	ori	r18, 0x01	; 1
 446:	2d c0       	rjmp	.+90     	; 0x4a2 <__LOCK_REGION_LENGTH__+0xa2>
 448:	39 2d       	mov	r19, r9
 44a:	32 60       	ori	r19, 0x02	; 2
 44c:	93 2e       	mov	r9, r19
 44e:	89 2d       	mov	r24, r9
 450:	84 60       	ori	r24, 0x04	; 4
 452:	98 2e       	mov	r9, r24
 454:	2a c0       	rjmp	.+84     	; 0x4aa <__LOCK_REGION_LENGTH__+0xaa>
 456:	e9 2d       	mov	r30, r9
 458:	e8 60       	ori	r30, 0x08	; 8
 45a:	15 c0       	rjmp	.+42     	; 0x486 <__LOCK_REGION_LENGTH__+0x86>
 45c:	97 fc       	sbrc	r9, 7
 45e:	2d c0       	rjmp	.+90     	; 0x4ba <__LOCK_REGION_LENGTH__+0xba>
 460:	20 ed       	ldi	r18, 0xD0	; 208
 462:	28 0f       	add	r18, r24
 464:	2a 30       	cpi	r18, 0x0A	; 10
 466:	88 f4       	brcc	.+34     	; 0x48a <__LOCK_REGION_LENGTH__+0x8a>
 468:	96 fe       	sbrs	r9, 6
 46a:	06 c0       	rjmp	.+12     	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
 46c:	3a e0       	ldi	r19, 0x0A	; 10
 46e:	13 9f       	mul	r17, r19
 470:	20 0d       	add	r18, r0
 472:	11 24       	eor	r1, r1
 474:	12 2f       	mov	r17, r18
 476:	19 c0       	rjmp	.+50     	; 0x4aa <__LOCK_REGION_LENGTH__+0xaa>
 478:	8a e0       	ldi	r24, 0x0A	; 10
 47a:	58 9e       	mul	r5, r24
 47c:	20 0d       	add	r18, r0
 47e:	11 24       	eor	r1, r1
 480:	52 2e       	mov	r5, r18
 482:	e9 2d       	mov	r30, r9
 484:	e0 62       	ori	r30, 0x20	; 32
 486:	9e 2e       	mov	r9, r30
 488:	10 c0       	rjmp	.+32     	; 0x4aa <__LOCK_REGION_LENGTH__+0xaa>
 48a:	8e 32       	cpi	r24, 0x2E	; 46
 48c:	31 f4       	brne	.+12     	; 0x49a <__LOCK_REGION_LENGTH__+0x9a>
 48e:	96 fc       	sbrc	r9, 6
 490:	e5 c2       	rjmp	.+1482   	; 0xa5c <__stack+0x15d>
 492:	f9 2d       	mov	r31, r9
 494:	f0 64       	ori	r31, 0x40	; 64
 496:	9f 2e       	mov	r9, r31
 498:	08 c0       	rjmp	.+16     	; 0x4aa <__LOCK_REGION_LENGTH__+0xaa>
 49a:	8c 36       	cpi	r24, 0x6C	; 108
 49c:	21 f4       	brne	.+8      	; 0x4a6 <__LOCK_REGION_LENGTH__+0xa6>
 49e:	29 2d       	mov	r18, r9
 4a0:	20 68       	ori	r18, 0x80	; 128
 4a2:	92 2e       	mov	r9, r18
 4a4:	02 c0       	rjmp	.+4      	; 0x4aa <__LOCK_REGION_LENGTH__+0xaa>
 4a6:	88 36       	cpi	r24, 0x68	; 104
 4a8:	41 f4       	brne	.+16     	; 0x4ba <__LOCK_REGION_LENGTH__+0xba>
 4aa:	f1 01       	movw	r30, r2
 4ac:	93 fd       	sbrc	r25, 3
 4ae:	85 91       	lpm	r24, Z+
 4b0:	93 ff       	sbrs	r25, 3
 4b2:	81 91       	ld	r24, Z+
 4b4:	1f 01       	movw	r2, r30
 4b6:	81 11       	cpse	r24, r1
 4b8:	b3 cf       	rjmp	.-154    	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
 4ba:	9b eb       	ldi	r25, 0xBB	; 187
 4bc:	98 0f       	add	r25, r24
 4be:	93 30       	cpi	r25, 0x03	; 3
 4c0:	20 f4       	brcc	.+8      	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>
 4c2:	99 2d       	mov	r25, r9
 4c4:	90 61       	ori	r25, 0x10	; 16
 4c6:	80 5e       	subi	r24, 0xE0	; 224
 4c8:	07 c0       	rjmp	.+14     	; 0x4d8 <__LOCK_REGION_LENGTH__+0xd8>
 4ca:	9b e9       	ldi	r25, 0x9B	; 155
 4cc:	98 0f       	add	r25, r24
 4ce:	93 30       	cpi	r25, 0x03	; 3
 4d0:	08 f0       	brcs	.+2      	; 0x4d4 <__LOCK_REGION_LENGTH__+0xd4>
 4d2:	66 c1       	rjmp	.+716    	; 0x7a0 <__LOCK_REGION_LENGTH__+0x3a0>
 4d4:	99 2d       	mov	r25, r9
 4d6:	9f 7e       	andi	r25, 0xEF	; 239
 4d8:	96 ff       	sbrs	r25, 6
 4da:	16 e0       	ldi	r17, 0x06	; 6
 4dc:	9f 73       	andi	r25, 0x3F	; 63
 4de:	99 2e       	mov	r9, r25
 4e0:	85 36       	cpi	r24, 0x65	; 101
 4e2:	19 f4       	brne	.+6      	; 0x4ea <__LOCK_REGION_LENGTH__+0xea>
 4e4:	90 64       	ori	r25, 0x40	; 64
 4e6:	99 2e       	mov	r9, r25
 4e8:	08 c0       	rjmp	.+16     	; 0x4fa <__LOCK_REGION_LENGTH__+0xfa>
 4ea:	86 36       	cpi	r24, 0x66	; 102
 4ec:	21 f4       	brne	.+8      	; 0x4f6 <__LOCK_REGION_LENGTH__+0xf6>
 4ee:	39 2f       	mov	r19, r25
 4f0:	30 68       	ori	r19, 0x80	; 128
 4f2:	93 2e       	mov	r9, r19
 4f4:	02 c0       	rjmp	.+4      	; 0x4fa <__LOCK_REGION_LENGTH__+0xfa>
 4f6:	11 11       	cpse	r17, r1
 4f8:	11 50       	subi	r17, 0x01	; 1
 4fa:	97 fe       	sbrs	r9, 7
 4fc:	07 c0       	rjmp	.+14     	; 0x50c <__LOCK_REGION_LENGTH__+0x10c>
 4fe:	1c 33       	cpi	r17, 0x3C	; 60
 500:	50 f4       	brcc	.+20     	; 0x516 <__LOCK_REGION_LENGTH__+0x116>
 502:	44 24       	eor	r4, r4
 504:	43 94       	inc	r4
 506:	41 0e       	add	r4, r17
 508:	27 e0       	ldi	r18, 0x07	; 7
 50a:	0b c0       	rjmp	.+22     	; 0x522 <__LOCK_REGION_LENGTH__+0x122>
 50c:	18 30       	cpi	r17, 0x08	; 8
 50e:	38 f0       	brcs	.+14     	; 0x51e <__LOCK_REGION_LENGTH__+0x11e>
 510:	27 e0       	ldi	r18, 0x07	; 7
 512:	17 e0       	ldi	r17, 0x07	; 7
 514:	05 c0       	rjmp	.+10     	; 0x520 <__LOCK_REGION_LENGTH__+0x120>
 516:	27 e0       	ldi	r18, 0x07	; 7
 518:	9c e3       	ldi	r25, 0x3C	; 60
 51a:	49 2e       	mov	r4, r25
 51c:	02 c0       	rjmp	.+4      	; 0x522 <__LOCK_REGION_LENGTH__+0x122>
 51e:	21 2f       	mov	r18, r17
 520:	41 2c       	mov	r4, r1
 522:	56 01       	movw	r10, r12
 524:	84 e0       	ldi	r24, 0x04	; 4
 526:	a8 0e       	add	r10, r24
 528:	b1 1c       	adc	r11, r1
 52a:	f6 01       	movw	r30, r12
 52c:	60 81       	ld	r22, Z
 52e:	71 81       	ldd	r23, Z+1	; 0x01
 530:	82 81       	ldd	r24, Z+2	; 0x02
 532:	93 81       	ldd	r25, Z+3	; 0x03
 534:	04 2d       	mov	r16, r4
 536:	a3 01       	movw	r20, r6
 538:	0e 94 93 05 	call	0xb26	; 0xb26 <__ftoa_engine>
 53c:	6c 01       	movw	r12, r24
 53e:	f9 81       	ldd	r31, Y+1	; 0x01
 540:	fc 87       	std	Y+12, r31	; 0x0c
 542:	f0 ff       	sbrs	r31, 0
 544:	02 c0       	rjmp	.+4      	; 0x54a <__LOCK_REGION_LENGTH__+0x14a>
 546:	f3 ff       	sbrs	r31, 3
 548:	06 c0       	rjmp	.+12     	; 0x556 <__LOCK_REGION_LENGTH__+0x156>
 54a:	91 fc       	sbrc	r9, 1
 54c:	06 c0       	rjmp	.+12     	; 0x55a <__LOCK_REGION_LENGTH__+0x15a>
 54e:	92 fe       	sbrs	r9, 2
 550:	06 c0       	rjmp	.+12     	; 0x55e <__LOCK_REGION_LENGTH__+0x15e>
 552:	00 e2       	ldi	r16, 0x20	; 32
 554:	05 c0       	rjmp	.+10     	; 0x560 <__LOCK_REGION_LENGTH__+0x160>
 556:	0d e2       	ldi	r16, 0x2D	; 45
 558:	03 c0       	rjmp	.+6      	; 0x560 <__LOCK_REGION_LENGTH__+0x160>
 55a:	0b e2       	ldi	r16, 0x2B	; 43
 55c:	01 c0       	rjmp	.+2      	; 0x560 <__LOCK_REGION_LENGTH__+0x160>
 55e:	00 e0       	ldi	r16, 0x00	; 0
 560:	8c 85       	ldd	r24, Y+12	; 0x0c
 562:	8c 70       	andi	r24, 0x0C	; 12
 564:	19 f0       	breq	.+6      	; 0x56c <__LOCK_REGION_LENGTH__+0x16c>
 566:	01 11       	cpse	r16, r1
 568:	5a c2       	rjmp	.+1204   	; 0xa1e <__stack+0x11f>
 56a:	9b c2       	rjmp	.+1334   	; 0xaa2 <__stack+0x1a3>
 56c:	97 fe       	sbrs	r9, 7
 56e:	10 c0       	rjmp	.+32     	; 0x590 <__LOCK_REGION_LENGTH__+0x190>
 570:	4c 0c       	add	r4, r12
 572:	fc 85       	ldd	r31, Y+12	; 0x0c
 574:	f4 ff       	sbrs	r31, 4
 576:	04 c0       	rjmp	.+8      	; 0x580 <__LOCK_REGION_LENGTH__+0x180>
 578:	8a 81       	ldd	r24, Y+2	; 0x02
 57a:	81 33       	cpi	r24, 0x31	; 49
 57c:	09 f4       	brne	.+2      	; 0x580 <__LOCK_REGION_LENGTH__+0x180>
 57e:	4a 94       	dec	r4
 580:	14 14       	cp	r1, r4
 582:	74 f5       	brge	.+92     	; 0x5e0 <__LOCK_REGION_LENGTH__+0x1e0>
 584:	28 e0       	ldi	r18, 0x08	; 8
 586:	24 15       	cp	r18, r4
 588:	78 f5       	brcc	.+94     	; 0x5e8 <__LOCK_REGION_LENGTH__+0x1e8>
 58a:	88 e0       	ldi	r24, 0x08	; 8
 58c:	48 2e       	mov	r4, r24
 58e:	2c c0       	rjmp	.+88     	; 0x5e8 <__LOCK_REGION_LENGTH__+0x1e8>
 590:	96 fc       	sbrc	r9, 6
 592:	2a c0       	rjmp	.+84     	; 0x5e8 <__LOCK_REGION_LENGTH__+0x1e8>
 594:	81 2f       	mov	r24, r17
 596:	90 e0       	ldi	r25, 0x00	; 0
 598:	8c 15       	cp	r24, r12
 59a:	9d 05       	cpc	r25, r13
 59c:	9c f0       	brlt	.+38     	; 0x5c4 <__LOCK_REGION_LENGTH__+0x1c4>
 59e:	3c ef       	ldi	r19, 0xFC	; 252
 5a0:	c3 16       	cp	r12, r19
 5a2:	3f ef       	ldi	r19, 0xFF	; 255
 5a4:	d3 06       	cpc	r13, r19
 5a6:	74 f0       	brlt	.+28     	; 0x5c4 <__LOCK_REGION_LENGTH__+0x1c4>
 5a8:	89 2d       	mov	r24, r9
 5aa:	80 68       	ori	r24, 0x80	; 128
 5ac:	98 2e       	mov	r9, r24
 5ae:	0a c0       	rjmp	.+20     	; 0x5c4 <__LOCK_REGION_LENGTH__+0x1c4>
 5b0:	e2 e0       	ldi	r30, 0x02	; 2
 5b2:	f0 e0       	ldi	r31, 0x00	; 0
 5b4:	ec 0f       	add	r30, r28
 5b6:	fd 1f       	adc	r31, r29
 5b8:	e1 0f       	add	r30, r17
 5ba:	f1 1d       	adc	r31, r1
 5bc:	80 81       	ld	r24, Z
 5be:	80 33       	cpi	r24, 0x30	; 48
 5c0:	19 f4       	brne	.+6      	; 0x5c8 <__LOCK_REGION_LENGTH__+0x1c8>
 5c2:	11 50       	subi	r17, 0x01	; 1
 5c4:	11 11       	cpse	r17, r1
 5c6:	f4 cf       	rjmp	.-24     	; 0x5b0 <__LOCK_REGION_LENGTH__+0x1b0>
 5c8:	97 fe       	sbrs	r9, 7
 5ca:	0e c0       	rjmp	.+28     	; 0x5e8 <__LOCK_REGION_LENGTH__+0x1e8>
 5cc:	44 24       	eor	r4, r4
 5ce:	43 94       	inc	r4
 5d0:	41 0e       	add	r4, r17
 5d2:	81 2f       	mov	r24, r17
 5d4:	90 e0       	ldi	r25, 0x00	; 0
 5d6:	c8 16       	cp	r12, r24
 5d8:	d9 06       	cpc	r13, r25
 5da:	2c f4       	brge	.+10     	; 0x5e6 <__LOCK_REGION_LENGTH__+0x1e6>
 5dc:	1c 19       	sub	r17, r12
 5de:	04 c0       	rjmp	.+8      	; 0x5e8 <__LOCK_REGION_LENGTH__+0x1e8>
 5e0:	44 24       	eor	r4, r4
 5e2:	43 94       	inc	r4
 5e4:	01 c0       	rjmp	.+2      	; 0x5e8 <__LOCK_REGION_LENGTH__+0x1e8>
 5e6:	10 e0       	ldi	r17, 0x00	; 0
 5e8:	97 fe       	sbrs	r9, 7
 5ea:	06 c0       	rjmp	.+12     	; 0x5f8 <__LOCK_REGION_LENGTH__+0x1f8>
 5ec:	1c 14       	cp	r1, r12
 5ee:	1d 04       	cpc	r1, r13
 5f0:	34 f4       	brge	.+12     	; 0x5fe <__LOCK_REGION_LENGTH__+0x1fe>
 5f2:	c6 01       	movw	r24, r12
 5f4:	01 96       	adiw	r24, 0x01	; 1
 5f6:	05 c0       	rjmp	.+10     	; 0x602 <__LOCK_REGION_LENGTH__+0x202>
 5f8:	85 e0       	ldi	r24, 0x05	; 5
 5fa:	90 e0       	ldi	r25, 0x00	; 0
 5fc:	02 c0       	rjmp	.+4      	; 0x602 <__LOCK_REGION_LENGTH__+0x202>
 5fe:	81 e0       	ldi	r24, 0x01	; 1
 600:	90 e0       	ldi	r25, 0x00	; 0
 602:	01 11       	cpse	r16, r1
 604:	01 96       	adiw	r24, 0x01	; 1
 606:	11 23       	and	r17, r17
 608:	31 f0       	breq	.+12     	; 0x616 <__LOCK_REGION_LENGTH__+0x216>
 60a:	21 2f       	mov	r18, r17
 60c:	30 e0       	ldi	r19, 0x00	; 0
 60e:	2f 5f       	subi	r18, 0xFF	; 255
 610:	3f 4f       	sbci	r19, 0xFF	; 255
 612:	82 0f       	add	r24, r18
 614:	93 1f       	adc	r25, r19
 616:	25 2d       	mov	r18, r5
 618:	30 e0       	ldi	r19, 0x00	; 0
 61a:	82 17       	cp	r24, r18
 61c:	93 07       	cpc	r25, r19
 61e:	14 f4       	brge	.+4      	; 0x624 <__LOCK_REGION_LENGTH__+0x224>
 620:	58 1a       	sub	r5, r24
 622:	01 c0       	rjmp	.+2      	; 0x626 <__LOCK_REGION_LENGTH__+0x226>
 624:	51 2c       	mov	r5, r1
 626:	89 2d       	mov	r24, r9
 628:	89 70       	andi	r24, 0x09	; 9
 62a:	49 f4       	brne	.+18     	; 0x63e <__LOCK_REGION_LENGTH__+0x23e>
 62c:	55 20       	and	r5, r5
 62e:	39 f0       	breq	.+14     	; 0x63e <__LOCK_REGION_LENGTH__+0x23e>
 630:	b7 01       	movw	r22, r14
 632:	80 e2       	ldi	r24, 0x20	; 32
 634:	90 e0       	ldi	r25, 0x00	; 0
 636:	0e 94 81 06 	call	0xd02	; 0xd02 <fputc>
 63a:	5a 94       	dec	r5
 63c:	f7 cf       	rjmp	.-18     	; 0x62c <__LOCK_REGION_LENGTH__+0x22c>
 63e:	00 23       	and	r16, r16
 640:	29 f0       	breq	.+10     	; 0x64c <__LOCK_REGION_LENGTH__+0x24c>
 642:	b7 01       	movw	r22, r14
 644:	80 2f       	mov	r24, r16
 646:	90 e0       	ldi	r25, 0x00	; 0
 648:	0e 94 81 06 	call	0xd02	; 0xd02 <fputc>
 64c:	93 fc       	sbrc	r9, 3
 64e:	09 c0       	rjmp	.+18     	; 0x662 <__LOCK_REGION_LENGTH__+0x262>
 650:	55 20       	and	r5, r5
 652:	39 f0       	breq	.+14     	; 0x662 <__LOCK_REGION_LENGTH__+0x262>
 654:	b7 01       	movw	r22, r14
 656:	80 e3       	ldi	r24, 0x30	; 48
 658:	90 e0       	ldi	r25, 0x00	; 0
 65a:	0e 94 81 06 	call	0xd02	; 0xd02 <fputc>
 65e:	5a 94       	dec	r5
 660:	f7 cf       	rjmp	.-18     	; 0x650 <__LOCK_REGION_LENGTH__+0x250>
 662:	97 fe       	sbrs	r9, 7
 664:	4c c0       	rjmp	.+152    	; 0x6fe <__LOCK_REGION_LENGTH__+0x2fe>
 666:	46 01       	movw	r8, r12
 668:	d7 fe       	sbrs	r13, 7
 66a:	02 c0       	rjmp	.+4      	; 0x670 <__LOCK_REGION_LENGTH__+0x270>
 66c:	81 2c       	mov	r8, r1
 66e:	91 2c       	mov	r9, r1
 670:	c6 01       	movw	r24, r12
 672:	88 19       	sub	r24, r8
 674:	99 09       	sbc	r25, r9
 676:	f3 01       	movw	r30, r6
 678:	e8 0f       	add	r30, r24
 67a:	f9 1f       	adc	r31, r25
 67c:	fe 87       	std	Y+14, r31	; 0x0e
 67e:	ed 87       	std	Y+13, r30	; 0x0d
 680:	96 01       	movw	r18, r12
 682:	24 19       	sub	r18, r4
 684:	31 09       	sbc	r19, r1
 686:	38 8b       	std	Y+16, r19	; 0x10
 688:	2f 87       	std	Y+15, r18	; 0x0f
 68a:	01 2f       	mov	r16, r17
 68c:	10 e0       	ldi	r17, 0x00	; 0
 68e:	11 95       	neg	r17
 690:	01 95       	neg	r16
 692:	11 09       	sbc	r17, r1
 694:	3f ef       	ldi	r19, 0xFF	; 255
 696:	83 16       	cp	r8, r19
 698:	93 06       	cpc	r9, r19
 69a:	29 f4       	brne	.+10     	; 0x6a6 <__LOCK_REGION_LENGTH__+0x2a6>
 69c:	b7 01       	movw	r22, r14
 69e:	8e e2       	ldi	r24, 0x2E	; 46
 6a0:	90 e0       	ldi	r25, 0x00	; 0
 6a2:	0e 94 81 06 	call	0xd02	; 0xd02 <fputc>
 6a6:	c8 14       	cp	r12, r8
 6a8:	d9 04       	cpc	r13, r9
 6aa:	4c f0       	brlt	.+18     	; 0x6be <__LOCK_REGION_LENGTH__+0x2be>
 6ac:	8f 85       	ldd	r24, Y+15	; 0x0f
 6ae:	98 89       	ldd	r25, Y+16	; 0x10
 6b0:	88 15       	cp	r24, r8
 6b2:	99 05       	cpc	r25, r9
 6b4:	24 f4       	brge	.+8      	; 0x6be <__LOCK_REGION_LENGTH__+0x2be>
 6b6:	ed 85       	ldd	r30, Y+13	; 0x0d
 6b8:	fe 85       	ldd	r31, Y+14	; 0x0e
 6ba:	81 81       	ldd	r24, Z+1	; 0x01
 6bc:	01 c0       	rjmp	.+2      	; 0x6c0 <__LOCK_REGION_LENGTH__+0x2c0>
 6be:	80 e3       	ldi	r24, 0x30	; 48
 6c0:	f1 e0       	ldi	r31, 0x01	; 1
 6c2:	8f 1a       	sub	r8, r31
 6c4:	91 08       	sbc	r9, r1
 6c6:	2d 85       	ldd	r18, Y+13	; 0x0d
 6c8:	3e 85       	ldd	r19, Y+14	; 0x0e
 6ca:	2f 5f       	subi	r18, 0xFF	; 255
 6cc:	3f 4f       	sbci	r19, 0xFF	; 255
 6ce:	3e 87       	std	Y+14, r19	; 0x0e
 6d0:	2d 87       	std	Y+13, r18	; 0x0d
 6d2:	80 16       	cp	r8, r16
 6d4:	91 06       	cpc	r9, r17
 6d6:	2c f0       	brlt	.+10     	; 0x6e2 <__LOCK_REGION_LENGTH__+0x2e2>
 6d8:	b7 01       	movw	r22, r14
 6da:	90 e0       	ldi	r25, 0x00	; 0
 6dc:	0e 94 81 06 	call	0xd02	; 0xd02 <fputc>
 6e0:	d9 cf       	rjmp	.-78     	; 0x694 <__LOCK_REGION_LENGTH__+0x294>
 6e2:	c8 14       	cp	r12, r8
 6e4:	d9 04       	cpc	r13, r9
 6e6:	41 f4       	brne	.+16     	; 0x6f8 <__LOCK_REGION_LENGTH__+0x2f8>
 6e8:	9a 81       	ldd	r25, Y+2	; 0x02
 6ea:	96 33       	cpi	r25, 0x36	; 54
 6ec:	20 f4       	brcc	.+8      	; 0x6f6 <__LOCK_REGION_LENGTH__+0x2f6>
 6ee:	95 33       	cpi	r25, 0x35	; 53
 6f0:	19 f4       	brne	.+6      	; 0x6f8 <__LOCK_REGION_LENGTH__+0x2f8>
 6f2:	3c 85       	ldd	r19, Y+12	; 0x0c
 6f4:	34 ff       	sbrs	r19, 4
 6f6:	81 e3       	ldi	r24, 0x31	; 49
 6f8:	b7 01       	movw	r22, r14
 6fa:	90 e0       	ldi	r25, 0x00	; 0
 6fc:	4e c0       	rjmp	.+156    	; 0x79a <__LOCK_REGION_LENGTH__+0x39a>
 6fe:	8a 81       	ldd	r24, Y+2	; 0x02
 700:	81 33       	cpi	r24, 0x31	; 49
 702:	19 f0       	breq	.+6      	; 0x70a <__LOCK_REGION_LENGTH__+0x30a>
 704:	9c 85       	ldd	r25, Y+12	; 0x0c
 706:	9f 7e       	andi	r25, 0xEF	; 239
 708:	9c 87       	std	Y+12, r25	; 0x0c
 70a:	b7 01       	movw	r22, r14
 70c:	90 e0       	ldi	r25, 0x00	; 0
 70e:	0e 94 81 06 	call	0xd02	; 0xd02 <fputc>
 712:	11 11       	cpse	r17, r1
 714:	05 c0       	rjmp	.+10     	; 0x720 <__LOCK_REGION_LENGTH__+0x320>
 716:	94 fc       	sbrc	r9, 4
 718:	18 c0       	rjmp	.+48     	; 0x74a <__LOCK_REGION_LENGTH__+0x34a>
 71a:	85 e6       	ldi	r24, 0x65	; 101
 71c:	90 e0       	ldi	r25, 0x00	; 0
 71e:	17 c0       	rjmp	.+46     	; 0x74e <__LOCK_REGION_LENGTH__+0x34e>
 720:	b7 01       	movw	r22, r14
 722:	8e e2       	ldi	r24, 0x2E	; 46
 724:	90 e0       	ldi	r25, 0x00	; 0
 726:	0e 94 81 06 	call	0xd02	; 0xd02 <fputc>
 72a:	1e 5f       	subi	r17, 0xFE	; 254
 72c:	82 e0       	ldi	r24, 0x02	; 2
 72e:	01 e0       	ldi	r16, 0x01	; 1
 730:	08 0f       	add	r16, r24
 732:	f3 01       	movw	r30, r6
 734:	e8 0f       	add	r30, r24
 736:	f1 1d       	adc	r31, r1
 738:	80 81       	ld	r24, Z
 73a:	b7 01       	movw	r22, r14
 73c:	90 e0       	ldi	r25, 0x00	; 0
 73e:	0e 94 81 06 	call	0xd02	; 0xd02 <fputc>
 742:	80 2f       	mov	r24, r16
 744:	01 13       	cpse	r16, r17
 746:	f3 cf       	rjmp	.-26     	; 0x72e <__LOCK_REGION_LENGTH__+0x32e>
 748:	e6 cf       	rjmp	.-52     	; 0x716 <__LOCK_REGION_LENGTH__+0x316>
 74a:	85 e4       	ldi	r24, 0x45	; 69
 74c:	90 e0       	ldi	r25, 0x00	; 0
 74e:	b7 01       	movw	r22, r14
 750:	0e 94 81 06 	call	0xd02	; 0xd02 <fputc>
 754:	d7 fc       	sbrc	r13, 7
 756:	06 c0       	rjmp	.+12     	; 0x764 <__LOCK_REGION_LENGTH__+0x364>
 758:	c1 14       	cp	r12, r1
 75a:	d1 04       	cpc	r13, r1
 75c:	41 f4       	brne	.+16     	; 0x76e <__LOCK_REGION_LENGTH__+0x36e>
 75e:	ec 85       	ldd	r30, Y+12	; 0x0c
 760:	e4 ff       	sbrs	r30, 4
 762:	05 c0       	rjmp	.+10     	; 0x76e <__LOCK_REGION_LENGTH__+0x36e>
 764:	d1 94       	neg	r13
 766:	c1 94       	neg	r12
 768:	d1 08       	sbc	r13, r1
 76a:	8d e2       	ldi	r24, 0x2D	; 45
 76c:	01 c0       	rjmp	.+2      	; 0x770 <__LOCK_REGION_LENGTH__+0x370>
 76e:	8b e2       	ldi	r24, 0x2B	; 43
 770:	b7 01       	movw	r22, r14
 772:	90 e0       	ldi	r25, 0x00	; 0
 774:	0e 94 81 06 	call	0xd02	; 0xd02 <fputc>
 778:	80 e3       	ldi	r24, 0x30	; 48
 77a:	2a e0       	ldi	r18, 0x0A	; 10
 77c:	c2 16       	cp	r12, r18
 77e:	d1 04       	cpc	r13, r1
 780:	2c f0       	brlt	.+10     	; 0x78c <__LOCK_REGION_LENGTH__+0x38c>
 782:	8f 5f       	subi	r24, 0xFF	; 255
 784:	fa e0       	ldi	r31, 0x0A	; 10
 786:	cf 1a       	sub	r12, r31
 788:	d1 08       	sbc	r13, r1
 78a:	f7 cf       	rjmp	.-18     	; 0x77a <__LOCK_REGION_LENGTH__+0x37a>
 78c:	b7 01       	movw	r22, r14
 78e:	90 e0       	ldi	r25, 0x00	; 0
 790:	0e 94 81 06 	call	0xd02	; 0xd02 <fputc>
 794:	b7 01       	movw	r22, r14
 796:	c6 01       	movw	r24, r12
 798:	c0 96       	adiw	r24, 0x30	; 48
 79a:	0e 94 81 06 	call	0xd02	; 0xd02 <fputc>
 79e:	54 c1       	rjmp	.+680    	; 0xa48 <__stack+0x149>
 7a0:	83 36       	cpi	r24, 0x63	; 99
 7a2:	31 f0       	breq	.+12     	; 0x7b0 <__LOCK_REGION_LENGTH__+0x3b0>
 7a4:	83 37       	cpi	r24, 0x73	; 115
 7a6:	79 f0       	breq	.+30     	; 0x7c6 <__LOCK_REGION_LENGTH__+0x3c6>
 7a8:	83 35       	cpi	r24, 0x53	; 83
 7aa:	09 f0       	breq	.+2      	; 0x7ae <__LOCK_REGION_LENGTH__+0x3ae>
 7ac:	56 c0       	rjmp	.+172    	; 0x85a <__LOCK_REGION_LENGTH__+0x45a>
 7ae:	20 c0       	rjmp	.+64     	; 0x7f0 <__LOCK_REGION_LENGTH__+0x3f0>
 7b0:	56 01       	movw	r10, r12
 7b2:	32 e0       	ldi	r19, 0x02	; 2
 7b4:	a3 0e       	add	r10, r19
 7b6:	b1 1c       	adc	r11, r1
 7b8:	f6 01       	movw	r30, r12
 7ba:	80 81       	ld	r24, Z
 7bc:	89 83       	std	Y+1, r24	; 0x01
 7be:	01 e0       	ldi	r16, 0x01	; 1
 7c0:	10 e0       	ldi	r17, 0x00	; 0
 7c2:	63 01       	movw	r12, r6
 7c4:	12 c0       	rjmp	.+36     	; 0x7ea <__LOCK_REGION_LENGTH__+0x3ea>
 7c6:	56 01       	movw	r10, r12
 7c8:	f2 e0       	ldi	r31, 0x02	; 2
 7ca:	af 0e       	add	r10, r31
 7cc:	b1 1c       	adc	r11, r1
 7ce:	f6 01       	movw	r30, r12
 7d0:	c0 80       	ld	r12, Z
 7d2:	d1 80       	ldd	r13, Z+1	; 0x01
 7d4:	96 fe       	sbrs	r9, 6
 7d6:	03 c0       	rjmp	.+6      	; 0x7de <__LOCK_REGION_LENGTH__+0x3de>
 7d8:	61 2f       	mov	r22, r17
 7da:	70 e0       	ldi	r23, 0x00	; 0
 7dc:	02 c0       	rjmp	.+4      	; 0x7e2 <__LOCK_REGION_LENGTH__+0x3e2>
 7de:	6f ef       	ldi	r22, 0xFF	; 255
 7e0:	7f ef       	ldi	r23, 0xFF	; 255
 7e2:	c6 01       	movw	r24, r12
 7e4:	0e 94 76 06 	call	0xcec	; 0xcec <strnlen>
 7e8:	8c 01       	movw	r16, r24
 7ea:	f9 2d       	mov	r31, r9
 7ec:	ff 77       	andi	r31, 0x7F	; 127
 7ee:	14 c0       	rjmp	.+40     	; 0x818 <__LOCK_REGION_LENGTH__+0x418>
 7f0:	56 01       	movw	r10, r12
 7f2:	22 e0       	ldi	r18, 0x02	; 2
 7f4:	a2 0e       	add	r10, r18
 7f6:	b1 1c       	adc	r11, r1
 7f8:	f6 01       	movw	r30, r12
 7fa:	c0 80       	ld	r12, Z
 7fc:	d1 80       	ldd	r13, Z+1	; 0x01
 7fe:	96 fe       	sbrs	r9, 6
 800:	03 c0       	rjmp	.+6      	; 0x808 <__LOCK_REGION_LENGTH__+0x408>
 802:	61 2f       	mov	r22, r17
 804:	70 e0       	ldi	r23, 0x00	; 0
 806:	02 c0       	rjmp	.+4      	; 0x80c <__LOCK_REGION_LENGTH__+0x40c>
 808:	6f ef       	ldi	r22, 0xFF	; 255
 80a:	7f ef       	ldi	r23, 0xFF	; 255
 80c:	c6 01       	movw	r24, r12
 80e:	0e 94 6b 06 	call	0xcd6	; 0xcd6 <strnlen_P>
 812:	8c 01       	movw	r16, r24
 814:	f9 2d       	mov	r31, r9
 816:	f0 68       	ori	r31, 0x80	; 128
 818:	9f 2e       	mov	r9, r31
 81a:	f3 fd       	sbrc	r31, 3
 81c:	1a c0       	rjmp	.+52     	; 0x852 <__LOCK_REGION_LENGTH__+0x452>
 81e:	85 2d       	mov	r24, r5
 820:	90 e0       	ldi	r25, 0x00	; 0
 822:	08 17       	cp	r16, r24
 824:	19 07       	cpc	r17, r25
 826:	a8 f4       	brcc	.+42     	; 0x852 <__LOCK_REGION_LENGTH__+0x452>
 828:	b7 01       	movw	r22, r14
 82a:	80 e2       	ldi	r24, 0x20	; 32
 82c:	90 e0       	ldi	r25, 0x00	; 0
 82e:	0e 94 81 06 	call	0xd02	; 0xd02 <fputc>
 832:	5a 94       	dec	r5
 834:	f4 cf       	rjmp	.-24     	; 0x81e <__LOCK_REGION_LENGTH__+0x41e>
 836:	f6 01       	movw	r30, r12
 838:	97 fc       	sbrc	r9, 7
 83a:	85 91       	lpm	r24, Z+
 83c:	97 fe       	sbrs	r9, 7
 83e:	81 91       	ld	r24, Z+
 840:	6f 01       	movw	r12, r30
 842:	b7 01       	movw	r22, r14
 844:	90 e0       	ldi	r25, 0x00	; 0
 846:	0e 94 81 06 	call	0xd02	; 0xd02 <fputc>
 84a:	51 10       	cpse	r5, r1
 84c:	5a 94       	dec	r5
 84e:	01 50       	subi	r16, 0x01	; 1
 850:	11 09       	sbc	r17, r1
 852:	01 15       	cp	r16, r1
 854:	11 05       	cpc	r17, r1
 856:	79 f7       	brne	.-34     	; 0x836 <__LOCK_REGION_LENGTH__+0x436>
 858:	f7 c0       	rjmp	.+494    	; 0xa48 <__stack+0x149>
 85a:	84 36       	cpi	r24, 0x64	; 100
 85c:	11 f0       	breq	.+4      	; 0x862 <__LOCK_REGION_LENGTH__+0x462>
 85e:	89 36       	cpi	r24, 0x69	; 105
 860:	61 f5       	brne	.+88     	; 0x8ba <__LOCK_REGION_LENGTH__+0x4ba>
 862:	56 01       	movw	r10, r12
 864:	97 fe       	sbrs	r9, 7
 866:	09 c0       	rjmp	.+18     	; 0x87a <__LOCK_REGION_LENGTH__+0x47a>
 868:	24 e0       	ldi	r18, 0x04	; 4
 86a:	a2 0e       	add	r10, r18
 86c:	b1 1c       	adc	r11, r1
 86e:	f6 01       	movw	r30, r12
 870:	60 81       	ld	r22, Z
 872:	71 81       	ldd	r23, Z+1	; 0x01
 874:	82 81       	ldd	r24, Z+2	; 0x02
 876:	93 81       	ldd	r25, Z+3	; 0x03
 878:	0a c0       	rjmp	.+20     	; 0x88e <__LOCK_REGION_LENGTH__+0x48e>
 87a:	f2 e0       	ldi	r31, 0x02	; 2
 87c:	af 0e       	add	r10, r31
 87e:	b1 1c       	adc	r11, r1
 880:	f6 01       	movw	r30, r12
 882:	60 81       	ld	r22, Z
 884:	71 81       	ldd	r23, Z+1	; 0x01
 886:	07 2e       	mov	r0, r23
 888:	00 0c       	add	r0, r0
 88a:	88 0b       	sbc	r24, r24
 88c:	99 0b       	sbc	r25, r25
 88e:	f9 2d       	mov	r31, r9
 890:	ff 76       	andi	r31, 0x6F	; 111
 892:	9f 2e       	mov	r9, r31
 894:	97 ff       	sbrs	r25, 7
 896:	09 c0       	rjmp	.+18     	; 0x8aa <__LOCK_REGION_LENGTH__+0x4aa>
 898:	90 95       	com	r25
 89a:	80 95       	com	r24
 89c:	70 95       	com	r23
 89e:	61 95       	neg	r22
 8a0:	7f 4f       	sbci	r23, 0xFF	; 255
 8a2:	8f 4f       	sbci	r24, 0xFF	; 255
 8a4:	9f 4f       	sbci	r25, 0xFF	; 255
 8a6:	f0 68       	ori	r31, 0x80	; 128
 8a8:	9f 2e       	mov	r9, r31
 8aa:	2a e0       	ldi	r18, 0x0A	; 10
 8ac:	30 e0       	ldi	r19, 0x00	; 0
 8ae:	a3 01       	movw	r20, r6
 8b0:	0e 94 bd 06 	call	0xd7a	; 0xd7a <__ultoa_invert>
 8b4:	c8 2e       	mov	r12, r24
 8b6:	c6 18       	sub	r12, r6
 8b8:	3f c0       	rjmp	.+126    	; 0x938 <__stack+0x39>
 8ba:	09 2d       	mov	r16, r9
 8bc:	85 37       	cpi	r24, 0x75	; 117
 8be:	21 f4       	brne	.+8      	; 0x8c8 <__LOCK_REGION_LENGTH__+0x4c8>
 8c0:	0f 7e       	andi	r16, 0xEF	; 239
 8c2:	2a e0       	ldi	r18, 0x0A	; 10
 8c4:	30 e0       	ldi	r19, 0x00	; 0
 8c6:	1d c0       	rjmp	.+58     	; 0x902 <__stack+0x3>
 8c8:	09 7f       	andi	r16, 0xF9	; 249
 8ca:	8f 36       	cpi	r24, 0x6F	; 111
 8cc:	91 f0       	breq	.+36     	; 0x8f2 <__LOCK_REGION_LENGTH__+0x4f2>
 8ce:	18 f4       	brcc	.+6      	; 0x8d6 <__LOCK_REGION_LENGTH__+0x4d6>
 8d0:	88 35       	cpi	r24, 0x58	; 88
 8d2:	59 f0       	breq	.+22     	; 0x8ea <__LOCK_REGION_LENGTH__+0x4ea>
 8d4:	c3 c0       	rjmp	.+390    	; 0xa5c <__stack+0x15d>
 8d6:	80 37       	cpi	r24, 0x70	; 112
 8d8:	19 f0       	breq	.+6      	; 0x8e0 <__LOCK_REGION_LENGTH__+0x4e0>
 8da:	88 37       	cpi	r24, 0x78	; 120
 8dc:	11 f0       	breq	.+4      	; 0x8e2 <__LOCK_REGION_LENGTH__+0x4e2>
 8de:	be c0       	rjmp	.+380    	; 0xa5c <__stack+0x15d>
 8e0:	00 61       	ori	r16, 0x10	; 16
 8e2:	04 ff       	sbrs	r16, 4
 8e4:	09 c0       	rjmp	.+18     	; 0x8f8 <__LOCK_REGION_LENGTH__+0x4f8>
 8e6:	04 60       	ori	r16, 0x04	; 4
 8e8:	07 c0       	rjmp	.+14     	; 0x8f8 <__LOCK_REGION_LENGTH__+0x4f8>
 8ea:	94 fe       	sbrs	r9, 4
 8ec:	08 c0       	rjmp	.+16     	; 0x8fe <__LOCK_REGION_LENGTH__+0x4fe>
 8ee:	06 60       	ori	r16, 0x06	; 6
 8f0:	06 c0       	rjmp	.+12     	; 0x8fe <__LOCK_REGION_LENGTH__+0x4fe>
 8f2:	28 e0       	ldi	r18, 0x08	; 8
 8f4:	30 e0       	ldi	r19, 0x00	; 0
 8f6:	05 c0       	rjmp	.+10     	; 0x902 <__stack+0x3>
 8f8:	20 e1       	ldi	r18, 0x10	; 16
 8fa:	30 e0       	ldi	r19, 0x00	; 0
 8fc:	02 c0       	rjmp	.+4      	; 0x902 <__stack+0x3>
 8fe:	20 e1       	ldi	r18, 0x10	; 16
 900:	32 e0       	ldi	r19, 0x02	; 2
 902:	56 01       	movw	r10, r12
 904:	07 ff       	sbrs	r16, 7
 906:	09 c0       	rjmp	.+18     	; 0x91a <__stack+0x1b>
 908:	84 e0       	ldi	r24, 0x04	; 4
 90a:	a8 0e       	add	r10, r24
 90c:	b1 1c       	adc	r11, r1
 90e:	f6 01       	movw	r30, r12
 910:	60 81       	ld	r22, Z
 912:	71 81       	ldd	r23, Z+1	; 0x01
 914:	82 81       	ldd	r24, Z+2	; 0x02
 916:	93 81       	ldd	r25, Z+3	; 0x03
 918:	08 c0       	rjmp	.+16     	; 0x92a <__stack+0x2b>
 91a:	f2 e0       	ldi	r31, 0x02	; 2
 91c:	af 0e       	add	r10, r31
 91e:	b1 1c       	adc	r11, r1
 920:	f6 01       	movw	r30, r12
 922:	60 81       	ld	r22, Z
 924:	71 81       	ldd	r23, Z+1	; 0x01
 926:	80 e0       	ldi	r24, 0x00	; 0
 928:	90 e0       	ldi	r25, 0x00	; 0
 92a:	a3 01       	movw	r20, r6
 92c:	0e 94 bd 06 	call	0xd7a	; 0xd7a <__ultoa_invert>
 930:	c8 2e       	mov	r12, r24
 932:	c6 18       	sub	r12, r6
 934:	0f 77       	andi	r16, 0x7F	; 127
 936:	90 2e       	mov	r9, r16
 938:	96 fe       	sbrs	r9, 6
 93a:	0b c0       	rjmp	.+22     	; 0x952 <__stack+0x53>
 93c:	09 2d       	mov	r16, r9
 93e:	0e 7f       	andi	r16, 0xFE	; 254
 940:	c1 16       	cp	r12, r17
 942:	50 f4       	brcc	.+20     	; 0x958 <__stack+0x59>
 944:	94 fe       	sbrs	r9, 4
 946:	0a c0       	rjmp	.+20     	; 0x95c <__stack+0x5d>
 948:	92 fc       	sbrc	r9, 2
 94a:	08 c0       	rjmp	.+16     	; 0x95c <__stack+0x5d>
 94c:	09 2d       	mov	r16, r9
 94e:	0e 7e       	andi	r16, 0xEE	; 238
 950:	05 c0       	rjmp	.+10     	; 0x95c <__stack+0x5d>
 952:	dc 2c       	mov	r13, r12
 954:	09 2d       	mov	r16, r9
 956:	03 c0       	rjmp	.+6      	; 0x95e <__stack+0x5f>
 958:	dc 2c       	mov	r13, r12
 95a:	01 c0       	rjmp	.+2      	; 0x95e <__stack+0x5f>
 95c:	d1 2e       	mov	r13, r17
 95e:	04 ff       	sbrs	r16, 4
 960:	0d c0       	rjmp	.+26     	; 0x97c <__stack+0x7d>
 962:	fe 01       	movw	r30, r28
 964:	ec 0d       	add	r30, r12
 966:	f1 1d       	adc	r31, r1
 968:	80 81       	ld	r24, Z
 96a:	80 33       	cpi	r24, 0x30	; 48
 96c:	11 f4       	brne	.+4      	; 0x972 <__stack+0x73>
 96e:	09 7e       	andi	r16, 0xE9	; 233
 970:	09 c0       	rjmp	.+18     	; 0x984 <__stack+0x85>
 972:	02 ff       	sbrs	r16, 2
 974:	06 c0       	rjmp	.+12     	; 0x982 <__stack+0x83>
 976:	d3 94       	inc	r13
 978:	d3 94       	inc	r13
 97a:	04 c0       	rjmp	.+8      	; 0x984 <__stack+0x85>
 97c:	80 2f       	mov	r24, r16
 97e:	86 78       	andi	r24, 0x86	; 134
 980:	09 f0       	breq	.+2      	; 0x984 <__stack+0x85>
 982:	d3 94       	inc	r13
 984:	03 fd       	sbrc	r16, 3
 986:	11 c0       	rjmp	.+34     	; 0x9aa <__stack+0xab>
 988:	00 ff       	sbrs	r16, 0
 98a:	06 c0       	rjmp	.+12     	; 0x998 <__stack+0x99>
 98c:	1c 2d       	mov	r17, r12
 98e:	d5 14       	cp	r13, r5
 990:	80 f4       	brcc	.+32     	; 0x9b2 <__stack+0xb3>
 992:	15 0d       	add	r17, r5
 994:	1d 19       	sub	r17, r13
 996:	0d c0       	rjmp	.+26     	; 0x9b2 <__stack+0xb3>
 998:	d5 14       	cp	r13, r5
 99a:	58 f4       	brcc	.+22     	; 0x9b2 <__stack+0xb3>
 99c:	b7 01       	movw	r22, r14
 99e:	80 e2       	ldi	r24, 0x20	; 32
 9a0:	90 e0       	ldi	r25, 0x00	; 0
 9a2:	0e 94 81 06 	call	0xd02	; 0xd02 <fputc>
 9a6:	d3 94       	inc	r13
 9a8:	f7 cf       	rjmp	.-18     	; 0x998 <__stack+0x99>
 9aa:	d5 14       	cp	r13, r5
 9ac:	10 f4       	brcc	.+4      	; 0x9b2 <__stack+0xb3>
 9ae:	5d 18       	sub	r5, r13
 9b0:	01 c0       	rjmp	.+2      	; 0x9b4 <__stack+0xb5>
 9b2:	51 2c       	mov	r5, r1
 9b4:	04 ff       	sbrs	r16, 4
 9b6:	10 c0       	rjmp	.+32     	; 0x9d8 <__stack+0xd9>
 9b8:	b7 01       	movw	r22, r14
 9ba:	80 e3       	ldi	r24, 0x30	; 48
 9bc:	90 e0       	ldi	r25, 0x00	; 0
 9be:	0e 94 81 06 	call	0xd02	; 0xd02 <fputc>
 9c2:	02 ff       	sbrs	r16, 2
 9c4:	17 c0       	rjmp	.+46     	; 0x9f4 <__stack+0xf5>
 9c6:	01 fd       	sbrc	r16, 1
 9c8:	03 c0       	rjmp	.+6      	; 0x9d0 <__stack+0xd1>
 9ca:	88 e7       	ldi	r24, 0x78	; 120
 9cc:	90 e0       	ldi	r25, 0x00	; 0
 9ce:	02 c0       	rjmp	.+4      	; 0x9d4 <__stack+0xd5>
 9d0:	88 e5       	ldi	r24, 0x58	; 88
 9d2:	90 e0       	ldi	r25, 0x00	; 0
 9d4:	b7 01       	movw	r22, r14
 9d6:	0c c0       	rjmp	.+24     	; 0x9f0 <__stack+0xf1>
 9d8:	80 2f       	mov	r24, r16
 9da:	86 78       	andi	r24, 0x86	; 134
 9dc:	59 f0       	breq	.+22     	; 0x9f4 <__stack+0xf5>
 9de:	01 ff       	sbrs	r16, 1
 9e0:	02 c0       	rjmp	.+4      	; 0x9e6 <__stack+0xe7>
 9e2:	8b e2       	ldi	r24, 0x2B	; 43
 9e4:	01 c0       	rjmp	.+2      	; 0x9e8 <__stack+0xe9>
 9e6:	80 e2       	ldi	r24, 0x20	; 32
 9e8:	07 fd       	sbrc	r16, 7
 9ea:	8d e2       	ldi	r24, 0x2D	; 45
 9ec:	b7 01       	movw	r22, r14
 9ee:	90 e0       	ldi	r25, 0x00	; 0
 9f0:	0e 94 81 06 	call	0xd02	; 0xd02 <fputc>
 9f4:	c1 16       	cp	r12, r17
 9f6:	38 f4       	brcc	.+14     	; 0xa06 <__stack+0x107>
 9f8:	b7 01       	movw	r22, r14
 9fa:	80 e3       	ldi	r24, 0x30	; 48
 9fc:	90 e0       	ldi	r25, 0x00	; 0
 9fe:	0e 94 81 06 	call	0xd02	; 0xd02 <fputc>
 a02:	11 50       	subi	r17, 0x01	; 1
 a04:	f7 cf       	rjmp	.-18     	; 0x9f4 <__stack+0xf5>
 a06:	ca 94       	dec	r12
 a08:	f3 01       	movw	r30, r6
 a0a:	ec 0d       	add	r30, r12
 a0c:	f1 1d       	adc	r31, r1
 a0e:	80 81       	ld	r24, Z
 a10:	b7 01       	movw	r22, r14
 a12:	90 e0       	ldi	r25, 0x00	; 0
 a14:	0e 94 81 06 	call	0xd02	; 0xd02 <fputc>
 a18:	c1 10       	cpse	r12, r1
 a1a:	f5 cf       	rjmp	.-22     	; 0xa06 <__stack+0x107>
 a1c:	15 c0       	rjmp	.+42     	; 0xa48 <__stack+0x149>
 a1e:	f4 e0       	ldi	r31, 0x04	; 4
 a20:	f5 15       	cp	r31, r5
 a22:	60 f5       	brcc	.+88     	; 0xa7c <__stack+0x17d>
 a24:	84 e0       	ldi	r24, 0x04	; 4
 a26:	58 1a       	sub	r5, r24
 a28:	93 fe       	sbrs	r9, 3
 a2a:	1f c0       	rjmp	.+62     	; 0xa6a <__stack+0x16b>
 a2c:	01 11       	cpse	r16, r1
 a2e:	27 c0       	rjmp	.+78     	; 0xa7e <__stack+0x17f>
 a30:	2c 85       	ldd	r18, Y+12	; 0x0c
 a32:	23 ff       	sbrs	r18, 3
 a34:	2a c0       	rjmp	.+84     	; 0xa8a <__stack+0x18b>
 a36:	08 e6       	ldi	r16, 0x68	; 104
 a38:	10 e0       	ldi	r17, 0x00	; 0
 a3a:	39 2d       	mov	r19, r9
 a3c:	30 71       	andi	r19, 0x10	; 16
 a3e:	93 2e       	mov	r9, r19
 a40:	f8 01       	movw	r30, r16
 a42:	84 91       	lpm	r24, Z
 a44:	81 11       	cpse	r24, r1
 a46:	24 c0       	rjmp	.+72     	; 0xa90 <__stack+0x191>
 a48:	55 20       	and	r5, r5
 a4a:	09 f4       	brne	.+2      	; 0xa4e <__stack+0x14f>
 a4c:	e4 cc       	rjmp	.-1592   	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 a4e:	b7 01       	movw	r22, r14
 a50:	80 e2       	ldi	r24, 0x20	; 32
 a52:	90 e0       	ldi	r25, 0x00	; 0
 a54:	0e 94 81 06 	call	0xd02	; 0xd02 <fputc>
 a58:	5a 94       	dec	r5
 a5a:	f6 cf       	rjmp	.-20     	; 0xa48 <__stack+0x149>
 a5c:	f7 01       	movw	r30, r14
 a5e:	86 81       	ldd	r24, Z+6	; 0x06
 a60:	97 81       	ldd	r25, Z+7	; 0x07
 a62:	26 c0       	rjmp	.+76     	; 0xab0 <__stack+0x1b1>
 a64:	8f ef       	ldi	r24, 0xFF	; 255
 a66:	9f ef       	ldi	r25, 0xFF	; 255
 a68:	23 c0       	rjmp	.+70     	; 0xab0 <__stack+0x1b1>
 a6a:	b7 01       	movw	r22, r14
 a6c:	80 e2       	ldi	r24, 0x20	; 32
 a6e:	90 e0       	ldi	r25, 0x00	; 0
 a70:	0e 94 81 06 	call	0xd02	; 0xd02 <fputc>
 a74:	5a 94       	dec	r5
 a76:	51 10       	cpse	r5, r1
 a78:	f8 cf       	rjmp	.-16     	; 0xa6a <__stack+0x16b>
 a7a:	d8 cf       	rjmp	.-80     	; 0xa2c <__stack+0x12d>
 a7c:	51 2c       	mov	r5, r1
 a7e:	b7 01       	movw	r22, r14
 a80:	80 2f       	mov	r24, r16
 a82:	90 e0       	ldi	r25, 0x00	; 0
 a84:	0e 94 81 06 	call	0xd02	; 0xd02 <fputc>
 a88:	d3 cf       	rjmp	.-90     	; 0xa30 <__stack+0x131>
 a8a:	0c e6       	ldi	r16, 0x6C	; 108
 a8c:	10 e0       	ldi	r17, 0x00	; 0
 a8e:	d5 cf       	rjmp	.-86     	; 0xa3a <__stack+0x13b>
 a90:	91 10       	cpse	r9, r1
 a92:	80 52       	subi	r24, 0x20	; 32
 a94:	b7 01       	movw	r22, r14
 a96:	90 e0       	ldi	r25, 0x00	; 0
 a98:	0e 94 81 06 	call	0xd02	; 0xd02 <fputc>
 a9c:	0f 5f       	subi	r16, 0xFF	; 255
 a9e:	1f 4f       	sbci	r17, 0xFF	; 255
 aa0:	cf cf       	rjmp	.-98     	; 0xa40 <__stack+0x141>
 aa2:	23 e0       	ldi	r18, 0x03	; 3
 aa4:	25 15       	cp	r18, r5
 aa6:	10 f4       	brcc	.+4      	; 0xaac <__stack+0x1ad>
 aa8:	83 e0       	ldi	r24, 0x03	; 3
 aaa:	bd cf       	rjmp	.-134    	; 0xa26 <__stack+0x127>
 aac:	51 2c       	mov	r5, r1
 aae:	c0 cf       	rjmp	.-128    	; 0xa30 <__stack+0x131>
 ab0:	60 96       	adiw	r28, 0x10	; 16
 ab2:	e2 e1       	ldi	r30, 0x12	; 18
 ab4:	0c 94 78 05 	jmp	0xaf0	; 0xaf0 <__epilogue_restores__>

00000ab8 <__prologue_saves__>:
 ab8:	2f 92       	push	r2
 aba:	3f 92       	push	r3
 abc:	4f 92       	push	r4
 abe:	5f 92       	push	r5
 ac0:	6f 92       	push	r6
 ac2:	7f 92       	push	r7
 ac4:	8f 92       	push	r8
 ac6:	9f 92       	push	r9
 ac8:	af 92       	push	r10
 aca:	bf 92       	push	r11
 acc:	cf 92       	push	r12
 ace:	df 92       	push	r13
 ad0:	ef 92       	push	r14
 ad2:	ff 92       	push	r15
 ad4:	0f 93       	push	r16
 ad6:	1f 93       	push	r17
 ad8:	cf 93       	push	r28
 ada:	df 93       	push	r29
 adc:	cd b7       	in	r28, 0x3d	; 61
 ade:	de b7       	in	r29, 0x3e	; 62
 ae0:	ca 1b       	sub	r28, r26
 ae2:	db 0b       	sbc	r29, r27
 ae4:	0f b6       	in	r0, 0x3f	; 63
 ae6:	f8 94       	cli
 ae8:	de bf       	out	0x3e, r29	; 62
 aea:	0f be       	out	0x3f, r0	; 63
 aec:	cd bf       	out	0x3d, r28	; 61
 aee:	09 94       	ijmp

00000af0 <__epilogue_restores__>:
 af0:	2a 88       	ldd	r2, Y+18	; 0x12
 af2:	39 88       	ldd	r3, Y+17	; 0x11
 af4:	48 88       	ldd	r4, Y+16	; 0x10
 af6:	5f 84       	ldd	r5, Y+15	; 0x0f
 af8:	6e 84       	ldd	r6, Y+14	; 0x0e
 afa:	7d 84       	ldd	r7, Y+13	; 0x0d
 afc:	8c 84       	ldd	r8, Y+12	; 0x0c
 afe:	9b 84       	ldd	r9, Y+11	; 0x0b
 b00:	aa 84       	ldd	r10, Y+10	; 0x0a
 b02:	b9 84       	ldd	r11, Y+9	; 0x09
 b04:	c8 84       	ldd	r12, Y+8	; 0x08
 b06:	df 80       	ldd	r13, Y+7	; 0x07
 b08:	ee 80       	ldd	r14, Y+6	; 0x06
 b0a:	fd 80       	ldd	r15, Y+5	; 0x05
 b0c:	0c 81       	ldd	r16, Y+4	; 0x04
 b0e:	1b 81       	ldd	r17, Y+3	; 0x03
 b10:	aa 81       	ldd	r26, Y+2	; 0x02
 b12:	b9 81       	ldd	r27, Y+1	; 0x01
 b14:	ce 0f       	add	r28, r30
 b16:	d1 1d       	adc	r29, r1
 b18:	0f b6       	in	r0, 0x3f	; 63
 b1a:	f8 94       	cli
 b1c:	de bf       	out	0x3e, r29	; 62
 b1e:	0f be       	out	0x3f, r0	; 63
 b20:	cd bf       	out	0x3d, r28	; 61
 b22:	ed 01       	movw	r28, r26
 b24:	08 95       	ret

00000b26 <__ftoa_engine>:
 b26:	28 30       	cpi	r18, 0x08	; 8
 b28:	08 f0       	brcs	.+2      	; 0xb2c <__ftoa_engine+0x6>
 b2a:	27 e0       	ldi	r18, 0x07	; 7
 b2c:	33 27       	eor	r19, r19
 b2e:	da 01       	movw	r26, r20
 b30:	99 0f       	add	r25, r25
 b32:	31 1d       	adc	r19, r1
 b34:	87 fd       	sbrc	r24, 7
 b36:	91 60       	ori	r25, 0x01	; 1
 b38:	00 96       	adiw	r24, 0x00	; 0
 b3a:	61 05       	cpc	r22, r1
 b3c:	71 05       	cpc	r23, r1
 b3e:	39 f4       	brne	.+14     	; 0xb4e <__ftoa_engine+0x28>
 b40:	32 60       	ori	r19, 0x02	; 2
 b42:	2e 5f       	subi	r18, 0xFE	; 254
 b44:	3d 93       	st	X+, r19
 b46:	30 e3       	ldi	r19, 0x30	; 48
 b48:	2a 95       	dec	r18
 b4a:	e1 f7       	brne	.-8      	; 0xb44 <__ftoa_engine+0x1e>
 b4c:	08 95       	ret
 b4e:	9f 3f       	cpi	r25, 0xFF	; 255
 b50:	30 f0       	brcs	.+12     	; 0xb5e <__ftoa_engine+0x38>
 b52:	80 38       	cpi	r24, 0x80	; 128
 b54:	71 05       	cpc	r23, r1
 b56:	61 05       	cpc	r22, r1
 b58:	09 f0       	breq	.+2      	; 0xb5c <__ftoa_engine+0x36>
 b5a:	3c 5f       	subi	r19, 0xFC	; 252
 b5c:	3c 5f       	subi	r19, 0xFC	; 252
 b5e:	3d 93       	st	X+, r19
 b60:	91 30       	cpi	r25, 0x01	; 1
 b62:	08 f0       	brcs	.+2      	; 0xb66 <__ftoa_engine+0x40>
 b64:	80 68       	ori	r24, 0x80	; 128
 b66:	91 1d       	adc	r25, r1
 b68:	df 93       	push	r29
 b6a:	cf 93       	push	r28
 b6c:	1f 93       	push	r17
 b6e:	0f 93       	push	r16
 b70:	ff 92       	push	r15
 b72:	ef 92       	push	r14
 b74:	19 2f       	mov	r17, r25
 b76:	98 7f       	andi	r25, 0xF8	; 248
 b78:	96 95       	lsr	r25
 b7a:	e9 2f       	mov	r30, r25
 b7c:	96 95       	lsr	r25
 b7e:	96 95       	lsr	r25
 b80:	e9 0f       	add	r30, r25
 b82:	ff 27       	eor	r31, r31
 b84:	e6 53       	subi	r30, 0x36	; 54
 b86:	ff 4f       	sbci	r31, 0xFF	; 255
 b88:	99 27       	eor	r25, r25
 b8a:	33 27       	eor	r19, r19
 b8c:	ee 24       	eor	r14, r14
 b8e:	ff 24       	eor	r15, r15
 b90:	a7 01       	movw	r20, r14
 b92:	e7 01       	movw	r28, r14
 b94:	05 90       	lpm	r0, Z+
 b96:	08 94       	sec
 b98:	07 94       	ror	r0
 b9a:	28 f4       	brcc	.+10     	; 0xba6 <__ftoa_engine+0x80>
 b9c:	36 0f       	add	r19, r22
 b9e:	e7 1e       	adc	r14, r23
 ba0:	f8 1e       	adc	r15, r24
 ba2:	49 1f       	adc	r20, r25
 ba4:	51 1d       	adc	r21, r1
 ba6:	66 0f       	add	r22, r22
 ba8:	77 1f       	adc	r23, r23
 baa:	88 1f       	adc	r24, r24
 bac:	99 1f       	adc	r25, r25
 bae:	06 94       	lsr	r0
 bb0:	a1 f7       	brne	.-24     	; 0xb9a <__ftoa_engine+0x74>
 bb2:	05 90       	lpm	r0, Z+
 bb4:	07 94       	ror	r0
 bb6:	28 f4       	brcc	.+10     	; 0xbc2 <__ftoa_engine+0x9c>
 bb8:	e7 0e       	add	r14, r23
 bba:	f8 1e       	adc	r15, r24
 bbc:	49 1f       	adc	r20, r25
 bbe:	56 1f       	adc	r21, r22
 bc0:	c1 1d       	adc	r28, r1
 bc2:	77 0f       	add	r23, r23
 bc4:	88 1f       	adc	r24, r24
 bc6:	99 1f       	adc	r25, r25
 bc8:	66 1f       	adc	r22, r22
 bca:	06 94       	lsr	r0
 bcc:	a1 f7       	brne	.-24     	; 0xbb6 <__ftoa_engine+0x90>
 bce:	05 90       	lpm	r0, Z+
 bd0:	07 94       	ror	r0
 bd2:	28 f4       	brcc	.+10     	; 0xbde <__ftoa_engine+0xb8>
 bd4:	f8 0e       	add	r15, r24
 bd6:	49 1f       	adc	r20, r25
 bd8:	56 1f       	adc	r21, r22
 bda:	c7 1f       	adc	r28, r23
 bdc:	d1 1d       	adc	r29, r1
 bde:	88 0f       	add	r24, r24
 be0:	99 1f       	adc	r25, r25
 be2:	66 1f       	adc	r22, r22
 be4:	77 1f       	adc	r23, r23
 be6:	06 94       	lsr	r0
 be8:	a1 f7       	brne	.-24     	; 0xbd2 <__ftoa_engine+0xac>
 bea:	05 90       	lpm	r0, Z+
 bec:	07 94       	ror	r0
 bee:	20 f4       	brcc	.+8      	; 0xbf8 <__ftoa_engine+0xd2>
 bf0:	49 0f       	add	r20, r25
 bf2:	56 1f       	adc	r21, r22
 bf4:	c7 1f       	adc	r28, r23
 bf6:	d8 1f       	adc	r29, r24
 bf8:	99 0f       	add	r25, r25
 bfa:	66 1f       	adc	r22, r22
 bfc:	77 1f       	adc	r23, r23
 bfe:	88 1f       	adc	r24, r24
 c00:	06 94       	lsr	r0
 c02:	a9 f7       	brne	.-22     	; 0xbee <__ftoa_engine+0xc8>
 c04:	84 91       	lpm	r24, Z
 c06:	10 95       	com	r17
 c08:	17 70       	andi	r17, 0x07	; 7
 c0a:	41 f0       	breq	.+16     	; 0xc1c <__ftoa_engine+0xf6>
 c0c:	d6 95       	lsr	r29
 c0e:	c7 95       	ror	r28
 c10:	57 95       	ror	r21
 c12:	47 95       	ror	r20
 c14:	f7 94       	ror	r15
 c16:	e7 94       	ror	r14
 c18:	1a 95       	dec	r17
 c1a:	c1 f7       	brne	.-16     	; 0xc0c <__ftoa_engine+0xe6>
 c1c:	e0 e7       	ldi	r30, 0x70	; 112
 c1e:	f0 e0       	ldi	r31, 0x00	; 0
 c20:	68 94       	set
 c22:	15 90       	lpm	r1, Z+
 c24:	15 91       	lpm	r17, Z+
 c26:	35 91       	lpm	r19, Z+
 c28:	65 91       	lpm	r22, Z+
 c2a:	95 91       	lpm	r25, Z+
 c2c:	05 90       	lpm	r0, Z+
 c2e:	7f e2       	ldi	r23, 0x2F	; 47
 c30:	73 95       	inc	r23
 c32:	e1 18       	sub	r14, r1
 c34:	f1 0a       	sbc	r15, r17
 c36:	43 0b       	sbc	r20, r19
 c38:	56 0b       	sbc	r21, r22
 c3a:	c9 0b       	sbc	r28, r25
 c3c:	d0 09       	sbc	r29, r0
 c3e:	c0 f7       	brcc	.-16     	; 0xc30 <__ftoa_engine+0x10a>
 c40:	e1 0c       	add	r14, r1
 c42:	f1 1e       	adc	r15, r17
 c44:	43 1f       	adc	r20, r19
 c46:	56 1f       	adc	r21, r22
 c48:	c9 1f       	adc	r28, r25
 c4a:	d0 1d       	adc	r29, r0
 c4c:	7e f4       	brtc	.+30     	; 0xc6c <__ftoa_engine+0x146>
 c4e:	70 33       	cpi	r23, 0x30	; 48
 c50:	11 f4       	brne	.+4      	; 0xc56 <__ftoa_engine+0x130>
 c52:	8a 95       	dec	r24
 c54:	e6 cf       	rjmp	.-52     	; 0xc22 <__ftoa_engine+0xfc>
 c56:	e8 94       	clt
 c58:	01 50       	subi	r16, 0x01	; 1
 c5a:	30 f0       	brcs	.+12     	; 0xc68 <__ftoa_engine+0x142>
 c5c:	08 0f       	add	r16, r24
 c5e:	0a f4       	brpl	.+2      	; 0xc62 <__ftoa_engine+0x13c>
 c60:	00 27       	eor	r16, r16
 c62:	02 17       	cp	r16, r18
 c64:	08 f4       	brcc	.+2      	; 0xc68 <__ftoa_engine+0x142>
 c66:	20 2f       	mov	r18, r16
 c68:	23 95       	inc	r18
 c6a:	02 2f       	mov	r16, r18
 c6c:	7a 33       	cpi	r23, 0x3A	; 58
 c6e:	28 f0       	brcs	.+10     	; 0xc7a <__ftoa_engine+0x154>
 c70:	79 e3       	ldi	r23, 0x39	; 57
 c72:	7d 93       	st	X+, r23
 c74:	2a 95       	dec	r18
 c76:	e9 f7       	brne	.-6      	; 0xc72 <__ftoa_engine+0x14c>
 c78:	10 c0       	rjmp	.+32     	; 0xc9a <__ftoa_engine+0x174>
 c7a:	7d 93       	st	X+, r23
 c7c:	2a 95       	dec	r18
 c7e:	89 f6       	brne	.-94     	; 0xc22 <__ftoa_engine+0xfc>
 c80:	06 94       	lsr	r0
 c82:	97 95       	ror	r25
 c84:	67 95       	ror	r22
 c86:	37 95       	ror	r19
 c88:	17 95       	ror	r17
 c8a:	17 94       	ror	r1
 c8c:	e1 18       	sub	r14, r1
 c8e:	f1 0a       	sbc	r15, r17
 c90:	43 0b       	sbc	r20, r19
 c92:	56 0b       	sbc	r21, r22
 c94:	c9 0b       	sbc	r28, r25
 c96:	d0 09       	sbc	r29, r0
 c98:	98 f0       	brcs	.+38     	; 0xcc0 <__ftoa_engine+0x19a>
 c9a:	23 95       	inc	r18
 c9c:	7e 91       	ld	r23, -X
 c9e:	73 95       	inc	r23
 ca0:	7a 33       	cpi	r23, 0x3A	; 58
 ca2:	08 f0       	brcs	.+2      	; 0xca6 <__ftoa_engine+0x180>
 ca4:	70 e3       	ldi	r23, 0x30	; 48
 ca6:	7c 93       	st	X, r23
 ca8:	20 13       	cpse	r18, r16
 caa:	b8 f7       	brcc	.-18     	; 0xc9a <__ftoa_engine+0x174>
 cac:	7e 91       	ld	r23, -X
 cae:	70 61       	ori	r23, 0x10	; 16
 cb0:	7d 93       	st	X+, r23
 cb2:	30 f0       	brcs	.+12     	; 0xcc0 <__ftoa_engine+0x19a>
 cb4:	83 95       	inc	r24
 cb6:	71 e3       	ldi	r23, 0x31	; 49
 cb8:	7d 93       	st	X+, r23
 cba:	70 e3       	ldi	r23, 0x30	; 48
 cbc:	2a 95       	dec	r18
 cbe:	e1 f7       	brne	.-8      	; 0xcb8 <__ftoa_engine+0x192>
 cc0:	11 24       	eor	r1, r1
 cc2:	ef 90       	pop	r14
 cc4:	ff 90       	pop	r15
 cc6:	0f 91       	pop	r16
 cc8:	1f 91       	pop	r17
 cca:	cf 91       	pop	r28
 ccc:	df 91       	pop	r29
 cce:	99 27       	eor	r25, r25
 cd0:	87 fd       	sbrc	r24, 7
 cd2:	90 95       	com	r25
 cd4:	08 95       	ret

00000cd6 <strnlen_P>:
 cd6:	fc 01       	movw	r30, r24
 cd8:	05 90       	lpm	r0, Z+
 cda:	61 50       	subi	r22, 0x01	; 1
 cdc:	70 40       	sbci	r23, 0x00	; 0
 cde:	01 10       	cpse	r0, r1
 ce0:	d8 f7       	brcc	.-10     	; 0xcd8 <strnlen_P+0x2>
 ce2:	80 95       	com	r24
 ce4:	90 95       	com	r25
 ce6:	8e 0f       	add	r24, r30
 ce8:	9f 1f       	adc	r25, r31
 cea:	08 95       	ret

00000cec <strnlen>:
 cec:	fc 01       	movw	r30, r24
 cee:	61 50       	subi	r22, 0x01	; 1
 cf0:	70 40       	sbci	r23, 0x00	; 0
 cf2:	01 90       	ld	r0, Z+
 cf4:	01 10       	cpse	r0, r1
 cf6:	d8 f7       	brcc	.-10     	; 0xcee <strnlen+0x2>
 cf8:	80 95       	com	r24
 cfa:	90 95       	com	r25
 cfc:	8e 0f       	add	r24, r30
 cfe:	9f 1f       	adc	r25, r31
 d00:	08 95       	ret

00000d02 <fputc>:
 d02:	0f 93       	push	r16
 d04:	1f 93       	push	r17
 d06:	cf 93       	push	r28
 d08:	df 93       	push	r29
 d0a:	fb 01       	movw	r30, r22
 d0c:	23 81       	ldd	r18, Z+3	; 0x03
 d0e:	21 fd       	sbrc	r18, 1
 d10:	03 c0       	rjmp	.+6      	; 0xd18 <fputc+0x16>
 d12:	8f ef       	ldi	r24, 0xFF	; 255
 d14:	9f ef       	ldi	r25, 0xFF	; 255
 d16:	2c c0       	rjmp	.+88     	; 0xd70 <fputc+0x6e>
 d18:	22 ff       	sbrs	r18, 2
 d1a:	16 c0       	rjmp	.+44     	; 0xd48 <fputc+0x46>
 d1c:	46 81       	ldd	r20, Z+6	; 0x06
 d1e:	57 81       	ldd	r21, Z+7	; 0x07
 d20:	24 81       	ldd	r18, Z+4	; 0x04
 d22:	35 81       	ldd	r19, Z+5	; 0x05
 d24:	42 17       	cp	r20, r18
 d26:	53 07       	cpc	r21, r19
 d28:	44 f4       	brge	.+16     	; 0xd3a <fputc+0x38>
 d2a:	a0 81       	ld	r26, Z
 d2c:	b1 81       	ldd	r27, Z+1	; 0x01
 d2e:	9d 01       	movw	r18, r26
 d30:	2f 5f       	subi	r18, 0xFF	; 255
 d32:	3f 4f       	sbci	r19, 0xFF	; 255
 d34:	31 83       	std	Z+1, r19	; 0x01
 d36:	20 83       	st	Z, r18
 d38:	8c 93       	st	X, r24
 d3a:	26 81       	ldd	r18, Z+6	; 0x06
 d3c:	37 81       	ldd	r19, Z+7	; 0x07
 d3e:	2f 5f       	subi	r18, 0xFF	; 255
 d40:	3f 4f       	sbci	r19, 0xFF	; 255
 d42:	37 83       	std	Z+7, r19	; 0x07
 d44:	26 83       	std	Z+6, r18	; 0x06
 d46:	14 c0       	rjmp	.+40     	; 0xd70 <fputc+0x6e>
 d48:	8b 01       	movw	r16, r22
 d4a:	ec 01       	movw	r28, r24
 d4c:	fb 01       	movw	r30, r22
 d4e:	00 84       	ldd	r0, Z+8	; 0x08
 d50:	f1 85       	ldd	r31, Z+9	; 0x09
 d52:	e0 2d       	mov	r30, r0
 d54:	09 95       	icall
 d56:	89 2b       	or	r24, r25
 d58:	e1 f6       	brne	.-72     	; 0xd12 <fputc+0x10>
 d5a:	d8 01       	movw	r26, r16
 d5c:	16 96       	adiw	r26, 0x06	; 6
 d5e:	8d 91       	ld	r24, X+
 d60:	9c 91       	ld	r25, X
 d62:	17 97       	sbiw	r26, 0x07	; 7
 d64:	01 96       	adiw	r24, 0x01	; 1
 d66:	17 96       	adiw	r26, 0x07	; 7
 d68:	9c 93       	st	X, r25
 d6a:	8e 93       	st	-X, r24
 d6c:	16 97       	sbiw	r26, 0x06	; 6
 d6e:	ce 01       	movw	r24, r28
 d70:	df 91       	pop	r29
 d72:	cf 91       	pop	r28
 d74:	1f 91       	pop	r17
 d76:	0f 91       	pop	r16
 d78:	08 95       	ret

00000d7a <__ultoa_invert>:
 d7a:	fa 01       	movw	r30, r20
 d7c:	aa 27       	eor	r26, r26
 d7e:	28 30       	cpi	r18, 0x08	; 8
 d80:	51 f1       	breq	.+84     	; 0xdd6 <__ultoa_invert+0x5c>
 d82:	20 31       	cpi	r18, 0x10	; 16
 d84:	81 f1       	breq	.+96     	; 0xde6 <__ultoa_invert+0x6c>
 d86:	e8 94       	clt
 d88:	6f 93       	push	r22
 d8a:	6e 7f       	andi	r22, 0xFE	; 254
 d8c:	6e 5f       	subi	r22, 0xFE	; 254
 d8e:	7f 4f       	sbci	r23, 0xFF	; 255
 d90:	8f 4f       	sbci	r24, 0xFF	; 255
 d92:	9f 4f       	sbci	r25, 0xFF	; 255
 d94:	af 4f       	sbci	r26, 0xFF	; 255
 d96:	b1 e0       	ldi	r27, 0x01	; 1
 d98:	3e d0       	rcall	.+124    	; 0xe16 <__ultoa_invert+0x9c>
 d9a:	b4 e0       	ldi	r27, 0x04	; 4
 d9c:	3c d0       	rcall	.+120    	; 0xe16 <__ultoa_invert+0x9c>
 d9e:	67 0f       	add	r22, r23
 da0:	78 1f       	adc	r23, r24
 da2:	89 1f       	adc	r24, r25
 da4:	9a 1f       	adc	r25, r26
 da6:	a1 1d       	adc	r26, r1
 da8:	68 0f       	add	r22, r24
 daa:	79 1f       	adc	r23, r25
 dac:	8a 1f       	adc	r24, r26
 dae:	91 1d       	adc	r25, r1
 db0:	a1 1d       	adc	r26, r1
 db2:	6a 0f       	add	r22, r26
 db4:	71 1d       	adc	r23, r1
 db6:	81 1d       	adc	r24, r1
 db8:	91 1d       	adc	r25, r1
 dba:	a1 1d       	adc	r26, r1
 dbc:	20 d0       	rcall	.+64     	; 0xdfe <__ultoa_invert+0x84>
 dbe:	09 f4       	brne	.+2      	; 0xdc2 <__ultoa_invert+0x48>
 dc0:	68 94       	set
 dc2:	3f 91       	pop	r19
 dc4:	2a e0       	ldi	r18, 0x0A	; 10
 dc6:	26 9f       	mul	r18, r22
 dc8:	11 24       	eor	r1, r1
 dca:	30 19       	sub	r19, r0
 dcc:	30 5d       	subi	r19, 0xD0	; 208
 dce:	31 93       	st	Z+, r19
 dd0:	de f6       	brtc	.-74     	; 0xd88 <__ultoa_invert+0xe>
 dd2:	cf 01       	movw	r24, r30
 dd4:	08 95       	ret
 dd6:	46 2f       	mov	r20, r22
 dd8:	47 70       	andi	r20, 0x07	; 7
 dda:	40 5d       	subi	r20, 0xD0	; 208
 ddc:	41 93       	st	Z+, r20
 dde:	b3 e0       	ldi	r27, 0x03	; 3
 de0:	0f d0       	rcall	.+30     	; 0xe00 <__ultoa_invert+0x86>
 de2:	c9 f7       	brne	.-14     	; 0xdd6 <__ultoa_invert+0x5c>
 de4:	f6 cf       	rjmp	.-20     	; 0xdd2 <__ultoa_invert+0x58>
 de6:	46 2f       	mov	r20, r22
 de8:	4f 70       	andi	r20, 0x0F	; 15
 dea:	40 5d       	subi	r20, 0xD0	; 208
 dec:	4a 33       	cpi	r20, 0x3A	; 58
 dee:	18 f0       	brcs	.+6      	; 0xdf6 <__ultoa_invert+0x7c>
 df0:	49 5d       	subi	r20, 0xD9	; 217
 df2:	31 fd       	sbrc	r19, 1
 df4:	40 52       	subi	r20, 0x20	; 32
 df6:	41 93       	st	Z+, r20
 df8:	02 d0       	rcall	.+4      	; 0xdfe <__ultoa_invert+0x84>
 dfa:	a9 f7       	brne	.-22     	; 0xde6 <__ultoa_invert+0x6c>
 dfc:	ea cf       	rjmp	.-44     	; 0xdd2 <__ultoa_invert+0x58>
 dfe:	b4 e0       	ldi	r27, 0x04	; 4
 e00:	a6 95       	lsr	r26
 e02:	97 95       	ror	r25
 e04:	87 95       	ror	r24
 e06:	77 95       	ror	r23
 e08:	67 95       	ror	r22
 e0a:	ba 95       	dec	r27
 e0c:	c9 f7       	brne	.-14     	; 0xe00 <__ultoa_invert+0x86>
 e0e:	00 97       	sbiw	r24, 0x00	; 0
 e10:	61 05       	cpc	r22, r1
 e12:	71 05       	cpc	r23, r1
 e14:	08 95       	ret
 e16:	9b 01       	movw	r18, r22
 e18:	ac 01       	movw	r20, r24
 e1a:	0a 2e       	mov	r0, r26
 e1c:	06 94       	lsr	r0
 e1e:	57 95       	ror	r21
 e20:	47 95       	ror	r20
 e22:	37 95       	ror	r19
 e24:	27 95       	ror	r18
 e26:	ba 95       	dec	r27
 e28:	c9 f7       	brne	.-14     	; 0xe1c <__ultoa_invert+0xa2>
 e2a:	62 0f       	add	r22, r18
 e2c:	73 1f       	adc	r23, r19
 e2e:	84 1f       	adc	r24, r20
 e30:	95 1f       	adc	r25, r21
 e32:	a0 1d       	adc	r26, r0
 e34:	08 95       	ret

00000e36 <_exit>:
 e36:	f8 94       	cli

00000e38 <__stop_program>:
 e38:	ff cf       	rjmp	.-2      	; 0xe38 <__stop_program>
